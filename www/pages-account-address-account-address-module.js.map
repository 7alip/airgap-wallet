{"version":3,"sources":["./src/app/pages/account-address/account-address.module.ts","./src/app/pages/account-address/account-address.ts","./src/app/pages/account-address/account-address.html"],"names":[],"mappings":"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","file":"pages-account-address-account-address-module.js","sourcesContent":["import { AirGapAngularCoreModule } from '@airgap/angular-core'\nimport { CommonModule } from '@angular/common'\nimport { NgModule } from '@angular/core'\nimport { FormsModule } from '@angular/forms'\nimport { RouterModule } from '@angular/router'\nimport { IonicModule } from '@ionic/angular'\nimport { TranslateModule } from '@ngx-translate/core'\n\nimport { ComponentsModule } from '../../components/components.module'\n\nimport { AccountAddressPage } from './account-address'\n\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    FormsModule,\n    ComponentsModule,\n    TranslateModule,\n    RouterModule.forChild([{ path: '', component: AccountAddressPage }]),\n    AirGapAngularCoreModule\n  ],\n  declarations: [AccountAddressPage]\n})\nexport class AccountAddressPageModule {}\n","import { ClipboardService } from '@airgap/angular-core'\nimport { Component } from '@angular/core'\nimport { ActivatedRoute } from '@angular/router'\nimport { NavController } from '@ionic/angular'\nimport { AirGapMarketWallet } from '@airgap/coinlib-core'\n\nimport { AccountProvider } from 'src/app/services/account/account.provider'\n\n@Component({\n  selector: 'page-account-address',\n  templateUrl: 'account-address.html',\n  styleUrls: ['./account-address.scss']\n})\nexport class AccountAddressPage {\n  public wallet: AirGapMarketWallet\n  public publicKey: string\n  public protocolID: string\n  public addressIndex: number\n\n  constructor(\n    private readonly navController: NavController,\n    private readonly route: ActivatedRoute,\n\n    private readonly clipboardProvider: ClipboardService,\n    public readonly accountProvider: AccountProvider\n  ) {\n    this.publicKey = this.route.snapshot.params.publicKey\n    this.protocolID = this.route.snapshot.params.protocolID\n    const addressIndex = this.route.snapshot.params.addressIndex\n    if (addressIndex && addressIndex !== 'undefined') {\n      this.addressIndex = parseInt(addressIndex, 10)\n    }\n    this.wallet = this.accountProvider.walletByPublicKeyAndProtocolAndAddressIndex(this.publicKey, this.protocolID, this.addressIndex)\n  }\n\n  public async copyAddressToClipboard(): Promise<void> {\n    await this.clipboardProvider.copyAndShowToast(this.wallet.receivingPublicAddress)\n  }\n\n  public async done(): Promise<void> {\n    await this.navController.pop()\n  }\n}\n","<ion-header class=\"ion-no-border\">\n  <ion-grid fixed=\"true\" class=\"ion-no-padding\">\n    <ion-toolbar>\n      <ion-buttons slot=\"start\">\n        <ion-back-button defaultHref=\"/tabs/portfolio\"></ion-back-button>\n      </ion-buttons>\n      <ion-title>{{ wallet.protocol.symbol }} {{ 'wallet-address.title' | translate }}</ion-title>\n    </ion-toolbar>\n  </ion-grid>\n</ion-header>\n\n<ion-content class=\"ion-padding\">\n  <ion-grid fixed=\"true\" class=\"ion-no-padding\">\n    <ion-row class=\"ion-padding-vertical\">\n      <ion-col size=\"12\">\n        <ion-avatar>\n          <airgap-identicon [address]=\"wallet.receivingPublicAddress\"></airgap-identicon>\n        </ion-avatar>\n        <airgap-currency-symbol class=\"symbol--icon\" [symbol]=\"wallet.protocol.symbol\"></airgap-currency-symbol>\n      </ion-col>\n      <ion-col size=\"12\">\n        <h2>{{ wallet.protocol.name }} {{ wallet.protocol.symbol }}</h2>\n        <p>\n          {{ 'wallet-address.address_label' | translate }}:\n          <br />\n          <span (click)=\"copyAddressToClipboard()\" class=\"text--selectable typography--mono\">\n            {{ wallet.receivingPublicAddress }}\n            <ion-icon name=\"clipboard-outline\"></ion-icon>\n          </span>\n        </p>\n      </ion-col>\n    </ion-row>\n\n    <ion-row class=\"ion-justify-content-center ion-padding-bottom\">\n      <airgap-qr [qrdata]=\"wallet.receivingPublicAddress\" [size]=\"240\"></airgap-qr>\n    </ion-row>\n  </ion-grid>\n  <ion-fab vertical=\"bottom\" horizontal=\"end\" slot=\"fixed\">\n    <ion-button shape=\"round\" color=\"primary\" (click)=\"done()\">{{ 'wallet-address.done_label' | translate }}</ion-button>\n  </ion-fab>\n</ion-content>\n"],"sourceRoot":"webpack:///"}