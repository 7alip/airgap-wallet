{"version":3,"sources":["./src/app/pages/account-activate/account-activate.utils.ts","./src/app/pages/account-activate/account-activate.page.ts","./src/app/pages/account-activate/account-activate.page.html","./src/app/pages/account-activate/account-activate.module.ts","./src/app/pages/account-activate/account-activate-routing.module.ts","./src/app/pages/account-activate/account-activate.effects.ts","./src/app/pages/account-activate/account-activate.reducers.ts","./src/app/pages/account-activate/account-activate.actions.ts"],"names":[],"mappings":"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","file":"pages-account-activate-account-activate-module.js","sourcesContent":["import { AirGapMarketWallet } from '@airgap/coinlib-core'\n\nexport function createAccountId(wallet: AirGapMarketWallet): string\nexport function createAccountId(protocolIdentifier: string, publicKey: string): string\nexport function createAccountId(walletOrIdentifier: AirGapMarketWallet | string, publicKey?: string): string {\n  const protocolIdentifier: string = typeof walletOrIdentifier === 'string' ? walletOrIdentifier : walletOrIdentifier.protocol.identifier\n  const walletPublicKey: string = typeof walletOrIdentifier === 'string' ? publicKey : walletOrIdentifier.publicKey\n\n  return `${protocolIdentifier}:${walletPublicKey}`\n}\n","import { UIResource, UIResourceStatus } from '@airgap/angular-core'\nimport { AirGapMarketWallet } from '@airgap/coinlib-core'\nimport { Component } from '@angular/core'\nimport { ActivatedRoute } from '@angular/router'\nimport { Store } from '@ngrx/store'\nimport { Observable } from 'rxjs'\nimport { first } from 'rxjs/operators'\n\nimport { AirGapMarketWalletGroup } from '../../models/AirGapMarketWalletGroup'\n\nimport * as actions from './account-activate.actions'\nimport * as fromAccountActivate from './account-activate.reducers'\nimport { createAccountId } from './account-activate.utils'\n\n@Component({\n  selector: 'app-account-activate',\n  templateUrl: './account-activate.page.html',\n  styleUrls: ['./account-activate.page.scss']\n})\nexport class AccountActivatePage {\n  public readonly protocolName$: Observable<UIResource<string>>\n  public readonly inactiveAccounts$: Observable<UIResource<AirGapMarketWalletGroup[]>>\n  public readonly isChecked$: Observable<Record<string, boolean>>\n\n  public readonly createAccountId: typeof createAccountId = createAccountId\n  public readonly UIResourceStatus: typeof UIResourceStatus = UIResourceStatus\n\n  constructor(private readonly store: Store<fromAccountActivate.State>, private readonly route: ActivatedRoute) {\n    this.protocolName$ = this.store.select(fromAccountActivate.selectProtocolName)\n    this.inactiveAccounts$ = this.store.select(fromAccountActivate.selectInactiveAccounts)\n    this.isChecked$ = this.store.select(fromAccountActivate.selectIsAccountChecked)\n  }\n\n  public ionViewWillEnter(): void {\n    this.store.dispatch(actions.viewWillEnter({ routeParams: this.route.snapshot.params }))\n  }\n\n  public async toggleAccount(wallet: AirGapMarketWallet, event?: any): Promise<void> {\n    const isChecked: boolean = (await this.isChecked$.pipe(first()).toPromise())[createAccountId(wallet)]\n    if (event !== undefined && event.detail.checked === isChecked) {\n      return\n    }\n\n    this.store.dispatch(actions.accountToggled({ protocolIdentifier: wallet.protocol.identifier, publicKey: wallet.publicKey }))\n  }\n\n  public add(): void {\n    this.store.dispatch(actions.addButtonClicked())\n  }\n}\n","<ion-header class=\"ion-no-border\">\n  <ion-grid fixed=\"true\" class=\"ion-no-padding\">\n    <ion-toolbar>\n      <ion-buttons slot=\"start\">\n        <ion-back-button defaultHref=\"/\"></ion-back-button>\n      </ion-buttons>\n      <ion-title>{{ 'account-activate.title' | translate }}</ion-title>\n    </ion-toolbar>\n  </ion-grid>\n</ion-header>\n<ion-content>\n  <ion-grid fixed=\"true\" class=\"ion-no-padding\">\n    <ion-row class=\"ion-padding\" *ngIf=\"(protocolName$ | async).status === UIResourceStatus.SUCCESS\">\n      <ion-text>\n        <span [innerHtml]=\"'account-activate.message' | translate: { protocol: (protocolName$ | async).value }\"></span>\n      </ion-text>\n    </ion-row>\n    <ng-container *ngFor=\"let accounts of (inactiveAccounts$ | async).value\">\n      <ion-row class=\"ion-padding\">\n        <ion-text class=\"font--weight__bold\" color=\"primary\">\n          <span>{{ accounts | groupLabel | translate }}</span>\n        </ion-text>\n      </ion-row>\n      <ion-row class=\"ion-no-padding\" *ngFor=\"let wallet of accounts.wallets\">\n        <ion-col size=\"10\" class=\"ion-no-padding\">\n          <portfolio-item [wallet]=\"wallet\" tappable (click)=\"toggleAccount(wallet)\"></portfolio-item>\n        </ion-col>\n        <ion-col size=\"2\" class=\"content--align__center-center ion-no-padding\">\n          <ion-checkbox\n            color=\"primary\"\n            [checked]=\"(isChecked$ | async)[createAccountId(wallet)]\"\n            (ionChange)=\"toggleAccount(wallet, $event)\"\n          ></ion-checkbox>\n        </ion-col>\n      </ion-row>\n    </ng-container>\n  </ion-grid>\n\n  <ion-fab vertical=\"bottom\" horizontal=\"end\" slot=\"fixed\">\n    <ion-button\n      shape=\"round\"\n      (click)=\"add()\"\n      color=\"secondary\"\n      [disabled]=\"(inactiveAccounts$ | async).status !== UIResourceStatus.SUCCESS\"\n    >\n      <ion-icon slot=\"start\" name=\"add\"></ion-icon>\n      {{ 'account-activate.add-accounts_label' | translate }}\n    </ion-button>\n  </ion-fab>\n</ion-content>\n","// import { AirGapAngularCoreModule } from '@airgap/angular-core'\n// import { AirGapAngularNgRxModule } from '@airgap/angular-ngrx'\nimport { CommonModule } from '@angular/common'\nimport { NgModule } from '@angular/core'\nimport { FormsModule } from '@angular/forms'\nimport { IonicModule } from '@ionic/angular'\nimport { EffectsModule } from '@ngrx/effects'\nimport { StoreModule } from '@ngrx/store'\nimport { TranslateModule } from '@ngx-translate/core'\n\nimport { ComponentsModule } from '../../components/components.module'\nimport { PipesModule } from '../../pipes/pipes.module'\n\nimport { AccountActivatePageRoutingModule } from './account-activate-routing.module'\nimport { AccountActivateEffects } from './account-activate.effects'\nimport { AccountActivatePage } from './account-activate.page'\nimport * as fromAccountActivate from './account-activate.reducers'\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    TranslateModule,\n    ComponentsModule,\n    PipesModule,\n    AccountActivatePageRoutingModule,\n    // AirGapAngularCoreModule,\n    // AirGapAngularNgRxModule,\n    StoreModule.forFeature('accountActivate', fromAccountActivate.reducer),\n    EffectsModule.forFeature([AccountActivateEffects])\n  ],\n  declarations: [AccountActivatePage]\n})\nexport class AccountActivatePageModule {}\n","import { NgModule } from '@angular/core'\nimport { RouterModule, Routes } from '@angular/router'\n\nimport { AccountActivatePage } from './account-activate.page'\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AccountActivatePage\n  }\n]\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AccountActivatePageRoutingModule {}\n","import { ProtocolService, UIResourceStatus } from '@airgap/angular-core'\nimport { AirGapMarketWallet, ICoinProtocol, ProtocolSymbols } from '@airgap/coinlib-core'\nimport { Injectable } from '@angular/core'\nimport { Router } from '@angular/router'\nimport { Actions, createEffect, ofType } from '@ngrx/effects'\nimport { Action, Store } from '@ngrx/store'\nimport { concat, from, of } from 'rxjs'\nimport { first, switchMap, tap, withLatestFrom } from 'rxjs/operators'\n\nimport { AirGapMarketWalletGroup } from '../../models/AirGapMarketWalletGroup'\nimport { AccountProvider } from '../../services/account/account.provider'\nimport { ErrorCategory, handleErrorSentry } from '../../services/sentry-error-handler/sentry-error-handler'\n\nimport * as actions from './account-activate.actions'\nimport * as fromAccountActivate from './account-activate.reducers'\nimport { ProtocolDetails } from './account-activate.types'\nimport { createAccountId } from './account-activate.utils'\n\n@Injectable()\nexport class AccountActivateEffects {\n  public initialData$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(actions.viewWillEnter),\n      withLatestFrom(this.accountProvider.getWalletGroupsObservable()),\n      switchMap(([action, walletGroups]) =>\n        concat(of(actions.initialDataLoaded({ walletGroups })), from(this.loadNavigationData(action.routeParams)).pipe(first()))\n      )\n    )\n  )\n\n  public add$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(actions.addButtonClicked),\n        withLatestFrom(this.store.select(fromAccountActivate.selectWalletGroups)),\n        withLatestFrom(this.store.select(fromAccountActivate.selectCheckedAccounts)),\n        tap(async ([[_, walletsGroups], checkedAccounts]) => {\n          if (walletsGroups.status !== UIResourceStatus.SUCCESS || walletsGroups.value === undefined) {\n            return\n          }\n\n          await this.addAccounts(walletsGroups.value, checkedAccounts)\n          this.popToRoot()\n        })\n      ),\n    { dispatch: false }\n  )\n\n  constructor(\n    private readonly actions$: Actions,\n    private readonly store: Store<fromAccountActivate.State>,\n    private readonly router: Router,\n    private readonly accountProvider: AccountProvider,\n    private readonly protocolService: ProtocolService\n  ) {}\n\n  private async loadNavigationData(routeParams: any): Promise<Action> {\n    const protocolIdentifier: ProtocolSymbols | undefined = routeParams.protocolID\n    const protocol: ICoinProtocol | undefined =\n      protocolIdentifier !== undefined ? await this.protocolService.getProtocol(protocolIdentifier) : undefined\n    const protocolDetails: ProtocolDetails | undefined =\n      protocol !== undefined ? { name: protocol.name, identifier: protocol.identifier } : undefined\n\n    return protocolDetails !== undefined ? actions.navigationDataLoaded({ protocolDetails }) : actions.invalidNavigationData()\n  }\n\n  private async addAccounts(walletGroups: AirGapMarketWalletGroup[], checkedAccounts: string[]): Promise<void> {\n    const checkedAccountsSet: Set<string> = new Set(checkedAccounts)\n\n    await Promise.all(walletGroups.map((walletGroup: AirGapMarketWalletGroup) => this.activateWallets(walletGroup, checkedAccountsSet)))\n  }\n\n  private async activateWallets(walletGroup: AirGapMarketWalletGroup, checkedAccounts: Set<string>): Promise<void> {\n    await Promise.all(\n      walletGroup.wallets\n        .filter((wallet: AirGapMarketWallet) => checkedAccounts.has(createAccountId(wallet)))\n        .map((wallet: AirGapMarketWallet) => this.activateWallet(wallet, walletGroup.id))\n    )\n  }\n\n  private async activateWallet(wallet: AirGapMarketWallet, groupId: string): Promise<void> {\n    await this.accountProvider.activateWallet(wallet, groupId)\n  }\n\n  private popToRoot(): void {\n    this.router.navigateByUrl('/tabs/portfolio').catch(handleErrorSentry(ErrorCategory.NAVIGATION))\n  }\n}\n","import { flattened, UIResource, UIResourceStatus } from '@airgap/angular-core'\nimport { AirGapMarketWallet, ProtocolSymbols } from '@airgap/coinlib-core'\nimport { AirGapWalletStatus } from '@airgap/coinlib-core/wallet/AirGapWallet'\nimport { createFeatureSelector, createReducer, createSelector, on } from '@ngrx/store'\n\nimport * as fromRoot from '../../app.reducers'\nimport { AirGapMarketWalletGroup } from '../../models/AirGapMarketWalletGroup'\n\nimport * as actions from './account-activate.actions'\nimport { ProtocolDetails } from './account-activate.types'\nimport { createAccountId } from './account-activate.utils'\n\n/**************** State ****************/\n\nexport interface FeatureState {\n  // TODO: move wallet groups to a global state\n  walletGroups: UIResource<AirGapMarketWalletGroup[]>\n  protocol: UIResource<ProtocolDetails>\n  checkedAccounts: string[]\n}\n\nexport interface State extends fromRoot.State {\n  accountActivate: FeatureState\n}\n\n/**************** Reducers ****************/\n\nexport const initialState: FeatureState = {\n  walletGroups: {\n    status: UIResourceStatus.IDLE,\n    value: []\n  },\n  protocol: {\n    status: UIResourceStatus.IDLE,\n    value: undefined\n  },\n  checkedAccounts: []\n}\n\nexport const reducer = createReducer(\n  initialState,\n  on(actions.initialDataLoaded, (state, { walletGroups }) => ({\n    ...state,\n    walletGroups: {\n      status: UIResourceStatus.SUCCESS,\n      value: walletGroups\n    },\n    checkedAccounts: []\n  })),\n  on(actions.navigationDataLoaded, (state, { protocolDetails }) => ({\n    ...state,\n    protocol: {\n      status: UIResourceStatus.SUCCESS,\n      value: protocolDetails\n    },\n    checkedAccounts: []\n  })),\n  on(actions.invalidNavigationData, (state) => ({\n    ...state,\n    protocol: {\n      status: UIResourceStatus.ERROR,\n      value: undefined\n    }\n  })),\n  on(actions.accountToggled, (state, { protocolIdentifier, publicKey }) => {\n    const accountId: string = createAccountId(protocolIdentifier, publicKey)\n    const foundIndex: number = state.checkedAccounts.indexOf(accountId)\n\n    return {\n      ...state,\n      checkedAccounts:\n        foundIndex > -1\n          ? state.checkedAccounts.slice(0, foundIndex).concat(state.checkedAccounts.slice(foundIndex + 1))\n          : [...state.checkedAccounts, accountId]\n    }\n  })\n)\n\n/**************** Selectors ****************/\n\nexport const selectFeatureState = createFeatureSelector<State, FeatureState>('accountActivate')\n\nexport const selectWalletGroups = createSelector(\n  selectFeatureState,\n  (state: FeatureState): UIResource<AirGapMarketWalletGroup[]> => state.walletGroups\n)\nexport const selectProtocolDetails = createSelector(\n  selectFeatureState,\n  (state: FeatureState): UIResource<ProtocolDetails> => state.protocol\n)\nexport const selectCheckedAccounts = createSelector(selectFeatureState, (state: FeatureState): string[] => state.checkedAccounts)\n\nexport const selectProtocolIdentifier = createSelector(\n  selectFeatureState,\n  (state: FeatureState): UIResource<ProtocolSymbols> => ({\n    status: state.protocol.status,\n    value: state.protocol.value !== undefined ? state.protocol.value.identifier : undefined\n  })\n)\n\nexport const selectProtocolName = createSelector(\n  selectFeatureState,\n  (state: FeatureState): UIResource<string> => ({\n    status: state.protocol.status,\n    value: state.protocol.value !== undefined ? state.protocol.value.name : undefined\n  })\n)\n\nexport const selectInactiveAccounts = createSelector(\n  selectWalletGroups,\n  selectProtocolIdentifier,\n  (\n    walletGroups: UIResource<AirGapMarketWalletGroup[]>,\n    protocolIdentifier: UIResource<ProtocolSymbols>\n  ): UIResource<AirGapMarketWalletGroup[]> => {\n    if (protocolIdentifier.status === UIResourceStatus.SUCCESS || protocolIdentifier.value !== undefined) {\n      return {\n        status: walletGroups.status,\n        value:\n          walletGroups.value !== undefined\n            ? walletGroups.value\n                .map(\n                  (walletGroup: AirGapMarketWalletGroup) =>\n                    new AirGapMarketWalletGroup(\n                      walletGroup.id,\n                      walletGroup.label,\n                      walletGroup.interactionSetting,\n                      walletGroup.wallets.filter(\n                        (wallet: AirGapMarketWallet) =>\n                          wallet.protocol.identifier === protocolIdentifier.value && wallet.status !== AirGapWalletStatus.ACTIVE\n                      ),\n                      walletGroup.transient\n                    )\n                )\n                .filter((group: AirGapMarketWalletGroup) => group.wallets.length > 0)\n            : undefined\n      }\n    } else {\n      return {\n        status: protocolIdentifier.status,\n        value: []\n      }\n    }\n  }\n)\n\nexport const selectIsAccountChecked = createSelector(\n  selectInactiveAccounts,\n  selectCheckedAccounts,\n  (inactiveAccounts: UIResource<AirGapMarketWalletGroup[]>, checkedAccounts: string[]): Record<string, boolean> => {\n    if (inactiveAccounts.value === undefined || inactiveAccounts.value.length === 0) {\n      return {}\n    }\n\n    const checkedAccountsSet: Set<string> = new Set(checkedAccounts)\n    const inactiveWallets: AirGapMarketWallet[] = flattened(inactiveAccounts.value.map((group: AirGapMarketWalletGroup) => group.wallets))\n\n    return inactiveWallets.reduce((record: Record<string, boolean>, next: AirGapMarketWallet) => {\n      const accountId: string = createAccountId(next)\n\n      return Object.assign(record, { [accountId]: checkedAccountsSet.has(accountId) })\n    }, {})\n  }\n)\n","import { ProtocolSymbols } from '@airgap/coinlib-core'\nimport { createAction, props } from '@ngrx/store'\n\nimport { AirGapMarketWalletGroup } from '../../models/AirGapMarketWalletGroup'\n\nimport { ProtocolDetails } from './account-activate.types'\n\nconst featureName: string = 'Account Activate'\n\n/**************** View Lifecycle ****************/\n\nexport const viewWillEnter = createAction(`[${featureName}] View Will Enter`, props<{ routeParams: any }>())\nexport const initialDataLoaded = createAction(`[${featureName}] Initial Data Loaded`, props<{ walletGroups: AirGapMarketWalletGroup[] }>())\n\nexport const navigationDataLoaded = createAction(`[${featureName}] Navigation Data Loaded`, props<{ protocolDetails: ProtocolDetails }>())\nexport const invalidNavigationData = createAction(`[${featureName}] Invalid Navigation Data`)\n\n/**************** User Interaction ****************/\n\nexport const accountToggled = createAction(\n  `[${featureName}] Account Toggled`,\n  props<{ protocolIdentifier: ProtocolSymbols; publicKey: string }>()\n)\nexport const addButtonClicked = createAction(`[${featureName}] Add Button Clicked`)\n"],"sourceRoot":"webpack:///"}