{"version":3,"sources":["./src/app/models/actions/ButtonAction.ts","./src/app/models/actions/AddTokenAction.ts","./src/app/models/actions/FundAccountAction.ts","./src/app/pages/account-transaction-list/account-transaction-list.module.ts","./src/app/models/ActionGroup.ts","./src/app/pages/account-transaction-list/account-transaction-list.ts","./src/app/pages/account-transaction-list/account-transaction-list.html","./src/app/models/actions/TezosMigrateAction.ts"],"names":[],"mappings":"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","file":"pages-account-transaction-list-account-transaction-list-module.js","sourcesContent":["import { Action } from '@airgap/coinlib-core/actions/Action'\nimport { RepeatableAction } from '@airgap/coinlib-core/actions/RepeatableAction'\n\nexport interface ButtonActionContext {\n  name: string\n  icon: string\n  identifier: string\n}\n\nexport class ButtonAction<Result, Context> extends RepeatableAction<Result, Context, ButtonActionContext> {\n  public get identifier(): string {\n    return this.context.identifier\n  }\n\n  public set identifier(_value: string) {\n    // TODO: Does this have to be empty?\n  }\n\n  public constructor(context: ButtonActionContext, actionFactory: () => Action<Result, Context>) {\n    super(context, actionFactory)\n  }\n}\n","import { NavController } from '@ionic/angular'\nimport { Action } from '@airgap/coinlib-core/actions/Action'\n\nimport { IAccountWrapper } from '../../pages/sub-account-add/sub-account-add'\nimport { AccountProvider } from '../../services/account/account.provider'\nimport { ErrorCategory, handleErrorSentry } from '../../services/sentry-error-handler/sentry-error-handler'\nimport { WalletActionInfo } from '../ActionGroup'\n\nexport interface AddTokenActionContext {\n  subAccounts: IAccountWrapper[]\n  accountProvider: AccountProvider\n  location: NavController\n}\n\nexport class AddTokenAction extends Action<void, AddTokenActionContext> {\n  public get identifier(): string {\n    return 'add-token-action'\n  }\n\n  public info: WalletActionInfo = {\n    name: 'account-transaction-list.add-tokens_label',\n    icon: 'add-outline'\n  }\n\n  protected async perform(): Promise<void> {\n    this.context.subAccounts\n      .filter((account: IAccountWrapper) => account.selected)\n      .forEach(async (account: IAccountWrapper) => {\n        const walletAddInfos = [\n          {\n            walletToAdd: account.wallet,\n            groupId: account.groupId,\n            groupLabel: account.groupLabel\n          }\n        ]\n        this.context.accountProvider.addWallets(walletAddInfos).catch(handleErrorSentry(ErrorCategory.WALLET_PROVIDER))\n      })\n  }\n}\n","import { AirGapMarketWallet, MainProtocolSymbols } from '@airgap/coinlib-core'\nimport { Action } from '@airgap/coinlib-core/actions/Action'\nimport { Router } from '@angular/router'\nimport { AccountProvider } from 'src/app/services/account/account.provider'\nimport { DataService, DataServiceKey } from 'src/app/services/data/data.service'\nimport { ErrorCategory, handleErrorSentry } from 'src/app/services/sentry-error-handler/sentry-error-handler'\nimport { partition } from 'src/app/utils/utils'\n\nimport { WalletActionInfo } from '../ActionGroup'\n\nexport interface FundAccountActionContext {\n  wallet: AirGapMarketWallet\n  accountProvider: AccountProvider\n  dataService: DataService\n  router: Router\n}\n\nexport class FundAccountAction extends Action<void, FundAccountActionContext> {\n  public get identifier() {\n    return 'fund-action'\n  }\n\n  public info: WalletActionInfo = {\n    name: 'account-transaction-list.fund_label',\n    icon: 'logo-usd'\n  }\n\n  protected async perform(): Promise<void> {\n    const wallets: AirGapMarketWallet[] = this.context.accountProvider.getWalletList()\n    const [compatibleWallets, incompatibleWallets]: [AirGapMarketWallet[], AirGapMarketWallet[]] = partition<AirGapMarketWallet>(\n      wallets.filter((wallet: AirGapMarketWallet) => wallet.publicKey !== this.context.wallet.publicKey),\n      (wallet: AirGapMarketWallet) => this.isCompatible(wallet)\n    )\n\n    const info = {\n      actionType: 'fund-account',\n      targetIdentifier: this.context.wallet.protocol.identifier,\n      address: this.context.wallet.receivingPublicAddress,\n      compatibleWallets,\n      incompatibleWallets\n    }\n    this.context.dataService.setData(DataServiceKey.ACCOUNTS, info)\n    this.context.router.navigateByUrl(`/select-wallet/${DataServiceKey.ACCOUNTS}`).catch(handleErrorSentry(ErrorCategory.NAVIGATION))\n  }\n\n  private isCompatible(wallet: AirGapMarketWallet): boolean {\n    const compatibleIdentifiers: Set<string> = new Set(this.context.wallet.protocol.identifier)\n    if (this.context.wallet.protocol.identifier === MainProtocolSymbols.XTZ_SHIELDED) {\n      compatibleIdentifiers.add(MainProtocolSymbols.XTZ)\n    }\n\n    return compatibleIdentifiers.has(wallet.protocol.identifier)\n  }\n}\n","import { CommonModule } from '@angular/common'\nimport { NgModule } from '@angular/core'\nimport { FormsModule } from '@angular/forms'\nimport { RouterModule } from '@angular/router'\nimport { IonicModule } from '@ionic/angular'\nimport { TranslateModule } from '@ngx-translate/core'\nimport { MomentModule } from 'ngx-moment'\n\nimport { ComponentsModule } from '../../components/components.module'\nimport { PipesModule } from '../../pipes/pipes.module'\n\nimport { AccountTransactionListPage } from './account-transaction-list'\n\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    FormsModule,\n    ComponentsModule,\n    TranslateModule,\n    PipesModule,\n    MomentModule,\n    RouterModule.forChild([{ path: '', component: AccountTransactionListPage }])\n  ],\n  declarations: [AccountTransactionListPage]\n})\nexport class AccountTransactionListPageModule {}\n","import { AirGapMarketWallet, ICoinProtocol } from '@airgap/coinlib-core'\nimport { Action } from '@airgap/coinlib-core/actions/Action'\nimport { ImportAccountAction, ImportAccoutActionContext } from '@airgap/coinlib-core/actions/GetKtAccountsAction'\nimport { LinkedAction } from '@airgap/coinlib-core/actions/LinkedAction'\nimport { SimpleAction } from '@airgap/coinlib-core/actions/SimpleAction'\nimport { CosmosDelegationActionType } from '@airgap/coinlib-core/protocols/cosmos/CosmosProtocol'\nimport { SubProtocolType } from '@airgap/coinlib-core/protocols/ICoinSubProtocol'\nimport { MainProtocolSymbols, SubProtocolSymbols } from '@airgap/coinlib-core'\n\nimport { AccountTransactionListPage } from '../pages/account-transaction-list/account-transaction-list'\nimport { DataServiceKey } from '../services/data/data.service'\nimport { ErrorCategory, handleErrorSentry } from '../services/sentry-error-handler/sentry-error-handler'\n\nimport { AddTokenAction, AddTokenActionContext } from './actions/AddTokenAction'\nimport { ButtonAction, ButtonActionContext } from './actions/ButtonAction'\nimport { AirGapDelegatorAction, AirGapDelegatorActionContext } from './actions/DelegatorAction'\nimport { AirGapTezosMigrateAction } from './actions/TezosMigrateAction'\nimport { FundAccountAction } from './actions/FundAccountAction'\n\ninterface DelegatorButtonActionContext extends ButtonActionContext {\n  type: any\n  data?: any\n}\n\nexport interface WalletActionInfo {\n  name: string\n  icon: string\n}\n\nexport class ActionGroup {\n  constructor(private readonly callerContext: AccountTransactionListPage) {}\n\n  public async getActions(): Promise<Action<any, any>[]> {\n    const actionMap: Map<string, () => Promise<Action<any, any>[]>> = new Map()\n    actionMap.set(MainProtocolSymbols.XTZ, async () => {\n      return this.getTezosActions()\n    })\n    actionMap.set(SubProtocolSymbols.XTZ_KT, async () => {\n      return this.getTezosKTActions()\n    })\n    actionMap.set(MainProtocolSymbols.XTZ_SHIELDED, async () => {\n      return this.getTezosShieldedTezActions()\n    })\n    actionMap.set(MainProtocolSymbols.ETH, async () => {\n      return this.getEthereumActions()\n    })\n    actionMap.set(MainProtocolSymbols.RBTC, async () => {\n      return this.getRskActions()\n    })\n    actionMap.set(MainProtocolSymbols.COSMOS, async () => {\n      return this.getCosmosActions()\n    })\n    actionMap.set(MainProtocolSymbols.POLKADOT, async () => {\n      return this.getPolkadotActions()\n    })\n    actionMap.set(MainProtocolSymbols.KUSAMA, async () => {\n      return this.getKusamaActions()\n    })\n    actionMap.set(MainProtocolSymbols.MOONBASE, async () => {\n      return this.getMoonbeamActions()\n    })\n    actionMap.set(MainProtocolSymbols.MOONRIVER, async () => {\n      return this.getMoonbeamActions()\n    })\n\n    const actionFunction: () => Promise<Action<any, any>[]> | undefined = actionMap.get(this.callerContext.protocolIdentifier)\n\n    return actionFunction ? actionFunction() : []\n  }\n\n  private getTezosActions(): Action<any, any>[] {\n    const delegateButtonAction = this.createDelegateButtonAction()\n\n    //TODO: Move logic to sub-account-add.ts\n    const addTokenButtonAction = new ButtonAction(\n      { name: 'account-transaction-list.add-tokens_label', icon: 'add', identifier: 'add-tokens' },\n      () => {\n        const prepareAddTokenActionContext = new SimpleAction(() => {\n          return new Promise<AddTokenActionContext>(async (resolve) => {\n            const info = {\n              subProtocolType: SubProtocolType.TOKEN,\n              wallet: this.callerContext.wallet,\n              actionCallback: resolve\n            }\n            this.callerContext.dataService.setData(DataServiceKey.DETAIL, info)\n            this.callerContext.router\n              .navigateByUrl(\n                `/sub-account-add/${DataServiceKey.DETAIL}/${info.wallet.publicKey}/${info.wallet.protocol.identifier}/${info.wallet.addressIndex}/${info.subProtocolType}`\n              )\n              .catch(handleErrorSentry(ErrorCategory.NAVIGATION))\n          })\n        })\n        const addTokenAction = new LinkedAction(prepareAddTokenActionContext, AddTokenAction)\n        addTokenAction.onComplete = async (): Promise<void> => {\n          addTokenAction.getLinkedAction().context.location.navigateRoot('')\n        }\n\n        return addTokenAction\n      }\n    )\n\n    return [delegateButtonAction, addTokenButtonAction]\n  }\n\n  public getImportAccountsAction(): ButtonAction<string[], ImportAccoutActionContext> {\n    const importButtonAction: ButtonAction<string[], ImportAccoutActionContext> = new ButtonAction(\n      { name: 'account-transaction-list.import-accounts_label', icon: 'add-outline', identifier: 'import-accounts' },\n      () => {\n        const importAccountAction: ImportAccountAction = new ImportAccountAction({ publicKey: this.callerContext.wallet.publicKey })\n        importAccountAction.onComplete = async (ktAddresses: string[]): Promise<void> => {\n          if (ktAddresses.length === 0) {\n            this.callerContext.showToast('No accounts to import.')\n          } else {\n            for (const [index] of ktAddresses.entries()) {\n              await this.addKtAddress(this.callerContext.wallet, index, ktAddresses)\n            }\n\n            this.callerContext.router.navigateByUrl('/').catch(handleErrorSentry(ErrorCategory.NAVIGATION))\n            this.callerContext.showToast('Accounts imported')\n          }\n        }\n        return importAccountAction\n      }\n    )\n    return importButtonAction\n  }\n\n  private getTezosKTActions(): Action<any, any>[] {\n    const migrateAction: ButtonAction<void, void> = new ButtonAction(\n      { name: 'account-transaction-list.migrate_label', icon: 'return-right', identifier: 'migrate-action' },\n      () => {\n        const action = new AirGapTezosMigrateAction({\n          wallet: this.callerContext.wallet,\n          alertCtrl: this.callerContext.alertCtrl,\n          translateService: this.callerContext.translateService,\n          protocolService: this.callerContext.protocolService,\n          dataService: this.callerContext.dataService,\n          router: this.callerContext.router\n        })\n\n        return action\n      }\n    )\n    return [migrateAction]\n  }\n\n  private getTezosShieldedTezActions(): Action<any, any>[] {\n    const fundAction: ButtonAction<void, void> = new ButtonAction(\n      { name: 'account-transaction-list.fund_label', icon: 'logo-usd', identifier: 'fund-action' },\n      () => {\n        const action = new FundAccountAction({\n          wallet: this.callerContext.wallet,\n          accountProvider: this.callerContext.accountProvider,\n          dataService: this.callerContext.dataService,\n          router: this.callerContext.router\n        })\n\n        return action\n      }\n    )\n\n    return [fundAction]\n  }\n\n  private async getCosmosActions(): Promise<Action<any, any>[]> {\n    const delegateButtonAction = this.createDelegateButtonAction()\n    const extraDelegatorButtonActions = await this.createDelegatorButtonActions({\n      type: CosmosDelegationActionType.WITHDRAW_ALL_REWARDS,\n      name: 'account-transaction-list.claim_rewards_label',\n      icon: 'logo-usd',\n      identifier: 'claim-rewards'\n    })\n\n    return [delegateButtonAction, ...extraDelegatorButtonActions]\n  }\n\n  private getEthereumActions(): Action<any, any>[] {\n    const addTokenButtonAction: ButtonAction<void, void> = new ButtonAction(\n      { name: 'account-transaction-list.add-tokens_label', icon: 'add-outline', identifier: 'add-tokens' },\n      () => {\n        const prepareAddTokenActionContext: SimpleAction<AddTokenActionContext> = new SimpleAction(() => {\n          return new Promise<AddTokenActionContext>(async (resolve) => {\n            const info = {\n              subProtocolType: SubProtocolType.TOKEN,\n              wallet: this.callerContext.wallet,\n              actionCallback: resolve\n            }\n            this.callerContext.dataService.setData(DataServiceKey.DETAIL, info)\n            this.callerContext.router\n              .navigateByUrl(\n                `/sub-account-add/${DataServiceKey.DETAIL}/${info.wallet.publicKey}/${info.wallet.protocol.identifier}/${info.wallet.addressIndex}/${info.subProtocolType}`\n              )\n              .catch(handleErrorSentry(ErrorCategory.NAVIGATION))\n          })\n        })\n        const addTokenAction: LinkedAction<void, AddTokenActionContext> = new LinkedAction(prepareAddTokenActionContext, AddTokenAction)\n        addTokenAction.onComplete = async (): Promise<void> => {\n          addTokenAction.getLinkedAction().context.location.navigateRoot('')\n        }\n\n        return addTokenAction\n      }\n    )\n\n    return [addTokenButtonAction]\n  }\n\n  private getRskActions(): Action<any, any>[] {\n    const addTokenButtonAction: ButtonAction<void, void> = new ButtonAction(\n      { name: 'account-transaction-list.add-tokens_label', icon: 'add-outline', identifier: 'add-tokens' },\n      () => {\n        const prepareAddTokenActionContext: SimpleAction<AddTokenActionContext> = new SimpleAction(() => {\n          return new Promise<AddTokenActionContext>(async resolve => {\n            const info = {\n              subProtocolType: SubProtocolType.TOKEN,\n              wallet: this.callerContext.wallet,\n              actionCallback: resolve\n            }\n            this.callerContext.dataService.setData(DataServiceKey.DETAIL, info)\n            this.callerContext.router\n              .navigateByUrl(\n                `/sub-account-add/${DataServiceKey.DETAIL}/${info.wallet.publicKey}/${info.wallet.protocol.identifier}/${\n                  info.wallet.addressIndex\n                }/${info.subProtocolType}`\n              )\n              .catch(handleErrorSentry(ErrorCategory.NAVIGATION))\n          })\n        })\n        const addTokenAction: LinkedAction<void, AddTokenActionContext> = new LinkedAction(prepareAddTokenActionContext, AddTokenAction)\n        addTokenAction.onComplete = async (): Promise<void> => {\n          addTokenAction.getLinkedAction().context.location.navigateRoot('')\n        }\n\n        return addTokenAction\n      }\n    )\n\n    return [addTokenButtonAction]\n  }\n\n  private getPolkadotActions(): Action<any, any>[] {\n    const delegateButtonAction = this.createDelegateButtonAction()\n\n    return [delegateButtonAction]\n  }\n\n  private getKusamaActions(): Action<any, any>[] {\n    const delegateButtonAction = this.createDelegateButtonAction()\n\n    return [delegateButtonAction]\n  }\n\n  private getMoonbeamActions(): Action<any, any>[] {\n    const delegateButtonAction = this.createDelegateButtonAction()\n\n    return [delegateButtonAction]\n  }\n\n  private async addKtAddress(xtzWallet: AirGapMarketWallet, index: number, ktAddresses: string[]): Promise<AirGapMarketWallet> {\n    let wallet = this.callerContext.accountProvider.walletByPublicKeyAndProtocolAndAddressIndex(\n      xtzWallet.publicKey,\n      SubProtocolSymbols.XTZ_KT,\n      index\n    )\n\n    if (wallet) {\n      return wallet\n    }\n\n    const xtzWalletGroup = this.callerContext.accountProvider.findWalletGroup(xtzWallet)\n    const protocol: ICoinProtocol = await this.callerContext.protocolService.getProtocol(SubProtocolSymbols.XTZ_KT)\n\n    wallet = new AirGapMarketWallet(\n      protocol,\n      xtzWallet.publicKey,\n      xtzWallet.isExtendedPublicKey,\n      xtzWallet.derivationPath,\n      xtzWallet.masterFingerprint,\n      xtzWallet.status,\n      xtzWallet.priceService,\n      index\n    )\n    wallet.addresses = ktAddresses\n    await wallet.synchronize().catch(handleErrorSentry(ErrorCategory.COINLIB))\n    const walletAddInfos = [\n      {\n        walletToAdd: wallet,\n        groupId: xtzWalletGroup !== undefined ? xtzWalletGroup.id : undefined,\n        groupLabel: xtzWalletGroup !== undefined ? xtzWalletGroup.label : undefined\n      }\n    ]\n    await this.callerContext.accountProvider.addWallets(walletAddInfos).catch(handleErrorSentry(ErrorCategory.WALLET_PROVIDER))\n\n    return wallet\n  }\n\n  private createDelegateButtonAction(): ButtonAction<void, void> {\n    return new ButtonAction({ name: 'account-transaction-list.delegate_label', icon: 'logo-usd', identifier: 'delegate-action' }, () => {\n      return new SimpleAction(() => {\n        return new Promise<void>((resolve) => {\n          const info = {\n            wallet: this.callerContext.wallet\n          }\n          this.callerContext.dataService.setData(DataServiceKey.DETAIL, info)\n          this.callerContext.router\n            .navigateByUrl(\n              `/delegation-detail/${DataServiceKey.DETAIL}/${this.callerContext.wallet.publicKey}/${this.callerContext.wallet.protocol.identifier}/${this.callerContext.wallet.addressIndex}`\n            )\n            .catch(handleErrorSentry(ErrorCategory.NAVIGATION))\n\n          resolve()\n        })\n      })\n    })\n  }\n\n  private async createDelegatorButtonActions(\n    ...contexts: DelegatorButtonActionContext[]\n  ): Promise<ButtonAction<void, AirGapDelegatorActionContext>[]> {\n    try {\n      const delegatorDetails = await this.callerContext.operationsProvider.getDelegatorDetails(this.callerContext.wallet)\n\n      if (delegatorDetails.availableActions) {\n        const availableActionTypes = delegatorDetails.availableActions.map((action) => action.type)\n        return contexts\n          .filter((context) => availableActionTypes.includes(context.type))\n          .map((context) => {\n            return new ButtonAction<void, AirGapDelegatorActionContext>(context, () => {\n              return new AirGapDelegatorAction({\n                wallet: this.callerContext.wallet,\n                type: context.type,\n                data: context.data,\n                toastController: this.callerContext.toastController,\n                loadingController: this.callerContext.loadingController,\n                operationsProvider: this.callerContext.operationsProvider,\n                dataService: this.callerContext.dataService,\n                accountService: this.callerContext.accountProvider\n              })\n            })\n          })\n      }\n    } catch (error) {\n      console.warn(error)\n    }\n\n    return []\n  }\n}\n","import { ProtocolService } from '@airgap/angular-core'\nimport {\n  AirGapMarketWallet,\n  IAirGapTransaction,\n  ICoinDelegateProtocol,\n  MainProtocolSymbols,\n  SubProtocolSymbols,\n  TezosKtProtocol\n} from '@airgap/coinlib-core'\nimport { Action } from '@airgap/coinlib-core/actions/Action'\nimport { IAirGapTransactionResult, IProtocolTransactionCursor } from '@airgap/coinlib-core/interfaces/IAirGapTransaction'\nimport { TezosKtAddress } from '@airgap/coinlib-core/protocols/tezos/kt/TezosKtAddress'\nimport { HttpClient } from '@angular/common/http'\nimport { Component } from '@angular/core'\nimport { ActivatedRoute, Router } from '@angular/router'\nimport { AlertController, LoadingController, NavController, Platform, PopoverController, ToastController } from '@ionic/angular'\nimport { TranslateService } from '@ngx-translate/core'\nimport { BigNumber } from 'bignumber.js'\nimport { Subscription, timer } from 'rxjs'\nimport { supportsDelegation } from 'src/app/helpers/delegation'\nimport { UIAccountExtendedDetails } from 'src/app/models/widgets/display/UIAccountExtendedDetails'\nimport { BrowserService } from 'src/app/services/browser/browser.service'\nimport { ExtensionsService } from 'src/app/services/extensions/extensions.service'\nimport { InteractionService } from 'src/app/services/interaction/interaction.service'\n\nimport { AccountEditPopoverComponent } from '../../components/account-edit-popover/account-edit-popover.component'\nimport { promiseTimeout } from '../../helpers/promise'\nimport { ActionGroup } from '../../models/ActionGroup'\nimport { AirGapTezosMigrateAction } from '../../models/actions/TezosMigrateAction'\nimport { AccountProvider } from '../../services/account/account.provider'\nimport { DataService, DataServiceKey } from '../../services/data/data.service'\nimport { OperationsProvider } from '../../services/operations/operations'\nimport { PushBackendProvider } from '../../services/push-backend/push-backend'\nimport { ErrorCategory, handleErrorSentry } from '../../services/sentry-error-handler/sentry-error-handler'\nimport { WalletStorageService } from '../../services/storage/storage'\n\nimport { ExchangeProvider } from './../../services/exchange/exchange'\n\nexport const refreshRate = 3000\n\n@Component({\n  selector: 'page-account-transaction-list',\n  templateUrl: 'account-transaction-list.html',\n  styleUrls: ['./account-transaction-list.scss']\n})\nexport class AccountTransactionListPage {\n  public mainProtocolSymbols: typeof MainProtocolSymbols = MainProtocolSymbols\n  public subProtocolSymbols: typeof SubProtocolSymbols = SubProtocolSymbols\n\n  private timer$ = timer(0, refreshRate)\n  private subscription: Subscription = new Subscription()\n\n  public isRefreshing: boolean = false\n  public initialTransactionsLoaded: boolean = false\n  public infiniteEnabled: boolean = false\n  public infiniteScrollActivated: boolean = false\n  public isDesktop: boolean = false\n  public showLinkToBlockExplorer: boolean = false\n\n  public txOffset: number = 0\n  public wallet: AirGapMarketWallet\n\n  public transactions: IAirGapTransaction[] = []\n\n  public protocolIdentifier: string\n\n  public pendingTransactions: IAirGapTransaction[] = []\n\n  public get hasPendingTransactions(): boolean {\n    return this.pendingTransactions.length > 0\n  }\n\n  public formattedExchangeTransactions: IAirGapTransaction[] = []\n\n  public get hasExchangeTransactions(): boolean {\n    return this.formattedExchangeTransactions.length > 0\n  }\n\n  public accountExtendedDetails: UIAccountExtendedDetails\n\n  // XTZ\n  public isKtDelegated: boolean = false\n\n  public actions: Action<any, any>[]\n\n  public lottieConfig: { path: string } = {\n    path: './assets/animations/loading.json'\n  }\n  private transactionResult: IAirGapTransactionResult\n  private readonly TRANSACTION_LIMIT: number = 10\n  private readonly actionGroup: ActionGroup\n\n  private readonly walletChanged: Subscription\n\n  private publicKey: string\n  private protocolID: string\n  private addressIndex\n\n  constructor(\n    public readonly alertCtrl: AlertController,\n    public readonly navController: NavController,\n    public readonly router: Router,\n    public readonly translateService: TranslateService,\n    public readonly operationsProvider: OperationsProvider,\n    public readonly popoverCtrl: PopoverController,\n    public readonly toastController: ToastController,\n    public readonly loadingController: LoadingController,\n    public readonly accountProvider: AccountProvider,\n    public readonly http: HttpClient,\n    public readonly dataService: DataService,\n    public readonly protocolService: ProtocolService,\n    public readonly interactionService: InteractionService,\n    private readonly route: ActivatedRoute,\n    private readonly platform: Platform,\n    private readonly storageProvider: WalletStorageService,\n    private readonly pushBackendProvider: PushBackendProvider,\n    private readonly exchangeProvider: ExchangeProvider,\n    private readonly extensionsService: ExtensionsService,\n    private readonly browserService: BrowserService\n  ) {\n    this.isDesktop = this.platform.is('desktop')\n\n    this.publicKey = this.route.snapshot.params.publicKey\n    this.protocolID = this.route.snapshot.params.protocolID\n    this.addressIndex = this.route.snapshot.params.addressIndex\n\n    if (this.addressIndex === 'undefined') {\n      this.addressIndex = undefined\n    } else {\n      this.addressIndex = Number(this.addressIndex)\n    }\n\n    this.wallet = this.accountProvider.walletByPublicKeyAndProtocolAndAddressIndex(this.publicKey, this.protocolID, this.addressIndex)\n\n    this.updateExtendedDetails()\n    this.walletChanged = accountProvider.walletChangedObservable.subscribe(() => {\n      this.loadInitialTransactions(true)\n      this.updateExtendedDetails()\n    })\n\n    this.subscription = this.timer$.subscribe(async () => {\n      if (this.hasExchangeTransactions) {\n        this.formattedExchangeTransactions = await this.exchangeProvider.getExchangeTransactionsByProtocol(\n          this.wallet.protocol.identifier,\n          this.wallet.addresses[0]\n        )\n      }\n    })\n\n    this.protocolIdentifier = this.wallet.protocol.identifier\n\n    if (this.protocolIdentifier === SubProtocolSymbols.XTZ_KT) {\n      this.isDelegated().catch(handleErrorSentry(ErrorCategory.COINLIB))\n    }\n    if (this.protocolIdentifier === MainProtocolSymbols.XTZ) {\n      this.getKtAddresses().catch(handleErrorSentry(ErrorCategory.COINLIB))\n      this.isDelegated().catch(handleErrorSentry(ErrorCategory.COINLIB))\n    }\n\n    this.actionGroup = new ActionGroup(this)\n    this.actionGroup.getActions().then((actions) => {\n      this.actions = actions\n    })\n  }\n\n  public showNoTransactionScreen(): boolean {\n    return this.transactions.length === 0\n  }\n\n  public ionViewWillEnter(): void {\n    this.doRefresh()\n  }\n\n  public openPreparePage() {\n    let info\n    if (this.protocolIdentifier === SubProtocolSymbols.XTZ_KT) {\n      const action = new AirGapTezosMigrateAction({\n        wallet: this.wallet,\n        alertCtrl: this.alertCtrl,\n        translateService: this.translateService,\n        protocolService: this.protocolService,\n        dataService: this.dataService,\n        router: this.router\n      })\n      action.start()\n      return\n    } else if (this.protocolIdentifier === SubProtocolSymbols.XTZ_BTC) {\n      info = {\n        wallet: this.wallet,\n        address: '',\n        disableFees: true\n      }\n    } else {\n      info = {\n        wallet: this.wallet,\n        address: ''\n      }\n    }\n    this.router\n      .navigateByUrl(\n        `/transaction-prepare/${DataServiceKey.DETAIL}/${this.publicKey}/${this.protocolID}/${this.addressIndex}/${\n          info.address !== ''\n        }/${0}/${'not_forced'}`\n      )\n      .catch(handleErrorSentry(ErrorCategory.NAVIGATION))\n  }\n\n  public openReceivePage(): void {\n    this.router\n      .navigateByUrl(`/account-address/${DataServiceKey.DETAIL}/${this.publicKey}/${this.protocolID}/${this.addressIndex}`)\n      .catch(handleErrorSentry(ErrorCategory.NAVIGATION))\n  }\n\n  public openTransactionDetailPage(transaction: IAirGapTransaction): void {\n    this.dataService.setData(DataServiceKey.DETAIL, transaction)\n    this.router\n      .navigateByUrl(`/transaction-detail/${DataServiceKey.DETAIL}/${transaction.hash}`)\n      .catch(handleErrorSentry(ErrorCategory.NAVIGATION))\n  }\n\n  public async openBlockexplorer(): Promise<void> {\n    const blockexplorer = await this.wallet.protocol.getBlockExplorerLinkForAddress(this.wallet.addresses[0])\n\n    this.browserService.openUrl(blockexplorer)\n  }\n\n  public doRefresh(event: any = null): void {\n    if (supportsDelegation(this.wallet.protocol)) {\n      this.operationsProvider.refreshAllDelegationStatuses([this.wallet])\n    }\n\n    this.isRefreshing = true\n\n    if (event) {\n      event.target.complete()\n    }\n\n    this.loadInitialTransactions().catch(handleErrorSentry())\n  }\n\n  public async loadMoreTransactions() {\n    const newTransactions: IAirGapTransaction[] = await this.getTransactions(\n      this.transactionResult ? this.transactionResult.cursor : undefined,\n      this.TRANSACTION_LIMIT\n    )\n\n    this.transactions = this.transactions.concat(newTransactions)\n\n    await this.storageProvider.setCache<IAirGapTransaction[]>(this.accountProvider.getAccountIdentifier(this.wallet), this.transactions)\n\n    this.infiniteEnabled = newTransactions.length >= this.TRANSACTION_LIMIT\n  }\n\n  public async doInfinite(event?: { target: { complete: () => void | PromiseLike<void> } }): Promise<void> {\n    this.infiniteScrollActivated = true\n    if (!this.infiniteEnabled) {\n      return event.target.complete()\n    }\n\n    await this.loadMoreTransactions()\n    event.target.complete()\n  }\n\n  public async loadInitialTransactions(_forceRefresh: boolean = false): Promise<void> {\n    if (this.transactions.length === 0) {\n      this.transactions =\n        (await this.storageProvider.getCache<IAirGapTransaction[]>(this.accountProvider.getAccountIdentifier(this.wallet)))?.slice(0, 10) ??\n        []\n    }\n\n    const transactionPromise: Promise<IAirGapTransaction[]> = this.getTransactions(undefined, this.TRANSACTION_LIMIT)\n\n    const transactions: IAirGapTransaction[] = await promiseTimeout(10000, transactionPromise).catch((error) => {\n      console.error(error)\n      // either the txs are taking too long to load or there is actually a network error\n      this.showLinkToBlockExplorer = true\n      return []\n    })\n\n    if (transactions.length > 0) {\n      this.transactions = transactions\n    }\n\n    this.isRefreshing = false\n    this.initialTransactionsLoaded = true\n\n    const addr: string = this.wallet.receivingPublicAddress\n\n    try {\n      this.pendingTransactions = (await this.pushBackendProvider.getPendingTxs(addr, this.protocolIdentifier)) as IAirGapTransaction[]\n    } catch (err) {}\n\n    this.formattedExchangeTransactions = await this.exchangeProvider.getExchangeTransactionsByProtocol(\n      this.wallet.protocol.identifier,\n      this.wallet.addresses[0]\n    )\n\n    // remove duplicates from pendingTransactions\n    const txHashes: string[] = this.transactions.map((value) => value.hash)\n    this.pendingTransactions = this.pendingTransactions.filter((value) => {\n      return txHashes.indexOf(value.hash) === -1\n    })\n\n    if (this.hasPendingTransactions) {\n      this.pendingTransactions = this.pendingTransactions.map((pendingTx) => {\n        pendingTx.fee = new BigNumber(pendingTx.fee).toString(10)\n        pendingTx.amount = new BigNumber(pendingTx.amount).toString(10)\n\n        return pendingTx\n      })\n    }\n\n    await this.storageProvider.setCache<IAirGapTransaction[]>(this.accountProvider.getAccountIdentifier(this.wallet), this.transactions)\n    this.txOffset = this.transactions.length\n\n    this.infiniteEnabled = this.transactions.length >= this.TRANSACTION_LIMIT\n    this.infiniteScrollActivated = false\n  }\n\n  public async getTransactions(cursor?: IProtocolTransactionCursor, limit: number = 10): Promise<IAirGapTransaction[]> {\n    const [transactionResult]: [IAirGapTransactionResult, void] = await Promise.all([\n      this.transactionResult ? this.wallet.fetchTransactions(limit, cursor) : this.wallet.fetchTransactions(limit),\n      this.wallet.synchronize().catch((error) => {\n        console.error(error)\n      })\n    ])\n\n    this.transactionResult = transactionResult\n    return transactionResult.transactions\n  }\n\n  public async presentEditPopover(event: any): Promise<void> {\n    const popover = await this.popoverCtrl.create({\n      component: AccountEditPopoverComponent,\n      componentProps: {\n        wallet: this.wallet,\n        importAccountAction:\n          this.wallet.protocol.identifier === MainProtocolSymbols.XTZ ? this.actionGroup.getImportAccountsAction() : undefined,\n        onDelete: (): void => {\n          this.navController.pop()\n        }\n      },\n      event,\n      translucent: true\n    })\n\n    return popover.present().catch(handleErrorSentry(ErrorCategory.NAVIGATION))\n  }\n\n  // Tezos\n  public async isDelegated(): Promise<void> {\n    const isDelegated = await this.operationsProvider.checkDelegated(\n      this.wallet.protocol as ICoinDelegateProtocol,\n      this.wallet.receivingPublicAddress\n    )\n    this.isKtDelegated = isDelegated\n    // const action = isDelegated ? this.getStatusAction() : this.getDelegateAction()\n    // this.replaceAction(ActionType.DELEGATE, action)\n  }\n\n  public async getKtAddresses(): Promise<string[]> {\n    const protocol: TezosKtProtocol = new TezosKtProtocol()\n    const ktAddresses: TezosKtAddress[] = await protocol.getAddressesFromPublicKey(this.wallet.publicKey)\n    // const action = ktAddresses.length > 0 ? this.getStatusAction(ktAddresses) : this.getDelegateAction()\n    // this.replaceAction(ActionType.DELEGATE, action)\n\n    return ktAddresses.map((address: TezosKtAddress) => address.getValue())\n  }\n\n  public async openDelegationDetails(): Promise<void> {\n    const delegateAction = this.actions.find((action) => action.identifier === 'delegate-action')\n    if (delegateAction) {\n      await delegateAction.start()\n    }\n  }\n\n  public async showToast(message: string): Promise<void> {\n    const toast: HTMLIonToastElement = await this.toastController.create({\n      duration: 3000,\n      message,\n      buttons: [\n        {\n          text: 'Ok',\n          role: 'cancel'\n        }\n      ],\n      position: 'bottom'\n    })\n    toast.present().catch(handleErrorSentry(ErrorCategory.NAVIGATION))\n  }\n\n  private updateExtendedDetails() {\n    if (supportsDelegation(this.wallet.protocol) && this.wallet.receivingPublicAddress !== undefined) {\n      this.extensionsService.loadDelegationExtensions().then(async () => {\n        this.accountExtendedDetails = await this.operationsProvider.getAccountExtendedDetails(this.wallet)\n      })\n    }\n  }\n\n  public ngOnDestroy(): void {\n    this.subscription.unsubscribe()\n    this.walletChanged.unsubscribe()\n  }\n}\n","<ion-header class=\"ion-no-border\">\n  <ion-grid fixed=\"true\" class=\"ion-no-padding\">\n    <ion-toolbar>\n      <ion-buttons slot=\"start\">\n        <ion-back-button defaultHref=\"/tabs/portfolio\"></ion-back-button>\n      </ion-buttons>\n      <ion-title>{{ wallet?.protocol.symbol }} {{ 'account-transaction-list.title' | translate }}</ion-title>\n      <ion-buttons slot=\"end\">\n        <ion-button id=\"edit-popover\" (click)=\"presentEditPopover($event)\" color=\"secondary\">\n          <ion-icon name=\"ellipsis-vertical-outline\"></ion-icon>\n        </ion-button>\n      </ion-buttons>\n    </ion-toolbar>\n    <ion-row style=\"display: block\"><portfolio-item [wallet]=\"wallet\" [maxDigits]=\"0\"></portfolio-item></ion-row>\n    <ion-row class=\"ion-padding-top ion-padding-horizontal action--container\">\n      <ion-button *ngFor=\"let action of actions\" color=\"secondary\" (click)=\"action.start()\" shape=\"round\" size=\"small\" fill=\"outline\">\n        <ion-icon slot=\"start\" [name]=\"action.context.icon\"></ion-icon>\n        {{ action.context.name | translate }}\n      </ion-button>\n    </ion-row>\n  </ion-grid>\n</ion-header>\n\n<ion-content no-bounce has-bouncing=\"false\" forceOverscroll=\"false\">\n  <ion-grid fixed=\"true\" class=\"ion-no-padding\">\n    <tezos-delegation-card\n      *ngIf=\"wallet.protocol.identifier === mainProtocolSymbols.XTZ && wallet.currentBalance\"\n      [wallet]=\"wallet\"\n      [isDelegated]=\"isKtDelegated\"\n      [delegateAmount]=\"wallet.currentBalance\"\n      (onDelegatedClick)=\"openDelegationDetails()\"\n      (onUndelegatedClick)=\"openDelegationDetails()\"\n    ></tezos-delegation-card>\n    <card-actionable\n      *ngIf=\"wallet.protocol.identifier === subProtocolSymbols.XTZ_KT\"\n      [imageLeft]=\"false\"\n      [imageName]=\"'babylon-migration.svg'\"\n      [text]=\"'account-transaction-list.migrate-babylon_card.text' | translate\"\n      [heading]=\"'account-transaction-list.migrate-babylon_card.heading' | translate\"\n      tappable\n      (click)=\"openPreparePage()\"\n    ></card-actionable>\n\n    <widget-account-extended-details\n      *ngIf=\"accountExtendedDetails !== undefined\"\n      [widget]=\"accountExtendedDetails\"\n    ></widget-account-extended-details>\n\n    <transaction-list\n      [transactionType]=\"'pendingTransaction'\"\n      [hasPendingTransactions]=\"hasPendingTransactions\"\n      [transactions]=\"pendingTransactions\"\n      [isRefreshing]=\"isRefreshing\"\n      [initialTransactionsLoaded]=\"initialTransactionsLoaded\"\n      [wallet]=\"wallet\"\n    ></transaction-list>\n\n    <transaction-list\n      [transactionType]=\"'exchangeTransaction'\"\n      [hasExchangeTransactions]=\"hasExchangeTransactions\"\n      [transactions]=\"formattedExchangeTransactions\"\n      [isRefreshing]=\"isRefreshing\"\n      [initialTransactionsLoaded]=\"initialTransactionsLoaded\"\n      [wallet]=\"wallet\"\n    ></transaction-list>\n\n    <ion-row class=\"ion-align-items-center ion-padding-top\">\n      <ion-col size=\"10\" class=\"ion-padding-horizontal\">\n        <ion-text class=\"font--weight__bold\" color=\"primary\">\n          <p>{{ 'account-transaction-list.transactions_label' | translate }}</p>\n        </ion-text>\n      </ion-col>\n\n      <ion-col size=\"1\" class=\"justify--content__end ion-no-padding\">\n        <ion-spinner *ngIf=\"isRefreshing && !showLinkToBlockExplorer\" color=\"primary\" name=\"dots\"></ion-spinner>\n      </ion-col>\n      <ion-col size=\"1\"></ion-col>\n    </ion-row>\n\n    <ion-row *ngIf=\"showLinkToBlockExplorer\">\n      <ion-col class=\"ion-padding\">\n        <ion-text class=\"font--weight__bold\" color=\"secondary\">\n          <p>{{ 'account-transaction-list.tx_not_loading' | translate }}</p>\n        </ion-text>\n        <ion-button (click)=\"openBlockexplorer()\" fill=\"outline\" color=\"secondary\" shape=\"round\" class=\"ion-margin-top\">\n          <ion-icon name=\"open\" slot=\"start\"></ion-icon>\n          {{ 'account-transaction-list.pending-transactions.open-blockexplorer_label' | translate }}\n        </ion-button>\n      </ion-col>\n    </ion-row>\n\n    <ion-refresher slot=\"fixed\" (ionRefresh)=\"doRefresh($event)\"><ion-refresher-content></ion-refresher-content></ion-refresher>\n\n    <transaction-list\n      [transactionType]=\"'normalTransaction'\"\n      [transactions]=\"transactions\"\n      [isRefreshing]=\"isRefreshing\"\n      [initialTransactionsLoaded]=\"initialTransactionsLoaded\"\n      [wallet]=\"wallet\"\n    ></transaction-list>\n    <ng-container *ngIf=\"isDesktop && infiniteEnabled && !infiniteScrollActivated\">\n      <ion-button fill=\"clear\" size=\"small\" (click)=\"loadMoreTransactions()\">{{ 'account-transaction-list.load_more' | translate }}</ion-button>\n    </ng-container>\n\n    <ion-infinite-scroll (ionInfinite)=\"doInfinite($event)\">\n      <ion-infinite-scroll-content></ion-infinite-scroll-content>\n    </ion-infinite-scroll>\n  </ion-grid>\n  <ion-fab vertical=\"bottom\" slot=\"fixed\">\n    <ion-row>\n      <ion-col>\n        <ion-button id=\"receive\" expand=\"full\" size=\"default\" color=\"primary\" (click)=\"openReceivePage()\" shape=\"round\">\n          <ion-icon slot=\"start\" src=\"./assets/custom-ion-icons/md-call_received.svg\"></ion-icon>\n          {{ 'account-transaction-list.receive_label' | translate }}\n        </ion-button>\n      </ion-col>\n      <ion-col>\n        <ion-button\n          id=\"send\"\n          expand=\"full\"\n          size=\"default\"\n          color=\"primary\"\n          (click)=\"openPreparePage()\"\n          [disabled]=\"wallet.currentBalance?.toNumber() === 0\"\n          shape=\"round\"\n        >\n          <ion-icon slot=\"start\" name=\"send-outline\"></ion-icon>\n          {{ 'account-transaction-list.send_label' | translate }}\n        </ion-button>\n      </ion-col>\n    </ion-row>\n  </ion-fab>\n</ion-content>\n","import { ProtocolService } from '@airgap/angular-core'\nimport { Router } from '@angular/router'\nimport { AlertController } from '@ionic/angular'\nimport { TranslateService } from '@ngx-translate/core'\nimport { AirGapMarketWallet, MainProtocolSymbols } from '@airgap/coinlib-core'\nimport { Action } from '@airgap/coinlib-core/actions/Action'\n\nimport { ShortenStringPipe } from '../../pipes/shorten-string/shorten-string.pipe'\nimport { DataService, DataServiceKey } from '../../services/data/data.service'\nimport { ErrorCategory, handleErrorSentry } from '../../services/sentry-error-handler/sentry-error-handler'\n\nexport interface AirGapTezosMigrateActionContext {\n  alertCtrl: AlertController\n  translateService: TranslateService\n  protocolService: ProtocolService\n  wallet: AirGapMarketWallet\n  dataService: DataService\n  router: Router\n}\n\nexport class AirGapTezosMigrateAction extends Action<void, AirGapTezosMigrateActionContext> {\n  protected perform(): Promise<void> {\n    return new Promise(async (resolve) => {\n      const mainProtocol = await this.context.protocolService.getProtocol(MainProtocolSymbols.XTZ)\n      const mainAddress = await mainProtocol.getAddressFromPublicKey(this.context.wallet.publicKey)\n      const shortenString = new ShortenStringPipe()\n      this.context.alertCtrl\n        .create({\n          header: this.context.translateService.instant('account-transaction-list.migrate-alert.header'),\n          message: `Do you want to transfer <span class=\\\"style__strong color__primary\\\">${this.context.wallet.currentBalance.shiftedBy(\n            -1 * this.context.wallet.protocol.decimals\n          )} XTZ</span> </strong> from <span class=\\\"style__strong color__primary\\\"> ${shortenString.transform(\n            this.context.wallet.receivingPublicAddress\n          )} </span> to <span class=\\\"style__strong color__primary\\\"> ${shortenString.transform(mainAddress.getValue())}</span>?`,\n          buttons: [\n            {\n              text: this.context.translateService.instant('account-transaction-list.migrate-alert.cancel'),\n              role: 'cancel',\n              handler: (): void => {\n                resolve()\n              }\n            },\n            {\n              text: this.context.translateService.instant('account-transaction-list.migrate-alert.confirm'),\n              handler: (): void => {\n                const info = {\n                  wallet: this.context.wallet,\n                  address: mainAddress.getValue(),\n                  forceMigration: true\n                }\n                this.context.dataService.setData(DataServiceKey.DETAIL, info)\n                this.context.router\n                  .navigateByUrl(\n                    `/transaction-prepare/${DataServiceKey.DETAIL}/${info.wallet.publicKey}/${info.wallet.protocol.identifier}/${\n                      info.wallet.addressIndex\n                    }/${info.address}/${0}/${info.forceMigration ? 'forced' : 'not_forced'}`\n                  )\n                  .catch(handleErrorSentry(ErrorCategory.NAVIGATION))\n                resolve()\n              }\n            }\n          ]\n        })\n        .then((alert: HTMLIonAlertElement) => {\n          alert.present().catch(handleErrorSentry(ErrorCategory.NAVIGATION))\n        })\n        .catch(handleErrorSentry(ErrorCategory.IONIC_ALERT))\n    })\n  }\n}\n"],"sourceRoot":"webpack:///"}