{"version":3,"sources":["./src/app/pages/about/about.module.ts","./src/app/pages/about/about.ts","./src/app/pages/about/about.html"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8C;AAEF;AACE;AACF;AACS;AAEgB;AAElC;;;AAa5B,MAAM,eAAe;;8EAAf,eAAe;8FAAf,eAAe;kGAVjB;YACP,0DAAW;YACX,4DAAY;YACZ,0DAAW;YACX,8EAAgB;YAChB,mEAAe;YACf,4DAAY,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,gDAAS,EAAE,CAAC,CAAC;SAC5D;mIAGU,eAAe,mBAFX,gDAAS,aAPtB,0DAAW;QACX,4DAAY;QACZ,0DAAW;QACX,8EAAgB;QAChB,mEAAe;;;;;;;;;;;;;;;;;;;;;;;ACjBiE;AAEzC;AACgE;;;;AAiBpG,MAAM,SAAS;IAapB,YAAsD,aAA4B;QAA5B,kBAAa,GAAb,aAAa,CAAe;QAZ3E,YAAO,GAAW,UAAU;QAC5B,gBAAW,GAAW,cAAc;QACpC,gBAAW,GAAW,gBAAgB;QACtC,gBAAW,GAAoB,cAAc;QAUlD,IAAI,CAAC,cAAc,EAAE,CAAC,KAAK,CAAC,6GAAiB,CAAC,iGAAa,CAAC,cAAc,CAAC,CAAC;IAC9E,CAAC;IAEY,cAAc;;YACzB,IAAI,yDAAS,CAAC,WAAW,EAAE,KAAK,UAAU,EAAE;gBAC1C,IAAI,MAAM,CAAC,OAAO,EAAE;oBAClB,kCAAkC;oBAClC,MAAM,EAAE,WAAW,EAAE,GAAG,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC;oBAClD,IAAI,CAAC,OAAO,GAAG,WAAW,CAAC,QAAQ,CAAC,SAAS,EAAE,EAAE,CAAC;iBACnD;aACF;iBAAM;gBACL,IAAI,CAAC,OAAO,GAAG,MAAM,IAAI,CAAC,aAAa,CAAC,GAAG,EAAE;aAC9C;YAED,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO;YACnC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW;YAC3C,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW;YAC3C,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW;QAC7C,CAAC;KAAA;;kEAhCU,SAAS,kEAaA,oEAAe;yFAbxB,SAAS;QCpBtB,gFAAkC;QAChC,8EAA8C;QAC5C,8EAAa;QACX,iFAA0B;QACxB,gFAAgE;QAClE,4DAAc;QACd,4EAAW;QAAA,uDAA+B;;QAAA,4DAAY;QACxD,4DAAc;QAChB,4DAAW;QACb,4DAAa;QAEb,iFAAiC;QAC/B,2EAAU;QAAA,wDAAa;QAAA,4DAAW;QAClC,4EAAU;QAAA,wDAAiB;QAAA,4DAAW;QACtC,4EAAU;QAAA,wDAAiB;QAAA,4DAAW;QACtC,4EAAU;QAAA,wDAAiB;QAAA,4DAAW;QACxC,4DAAc;;QAVG,0DAA+B;QAA/B,+IAA+B;QAMpC,0DAAa;QAAb,4EAAa;QACb,0DAAiB;QAAjB,gFAAiB;QACjB,0DAAiB;QAAjB,gFAAiB;QACjB,0DAAiB;QAAjB,gFAAiB","file":"pages-about-about-module.js","sourcesContent":["import { CommonModule } from '@angular/common'\nimport { NgModule } from '@angular/core'\nimport { FormsModule } from '@angular/forms'\nimport { RouterModule } from '@angular/router'\nimport { IonicModule } from '@ionic/angular'\nimport { TranslateModule } from '@ngx-translate/core'\n\nimport { ComponentsModule } from '../../components/components.module'\n\nimport { AboutPage } from './about'\n\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    FormsModule,\n    ComponentsModule,\n    TranslateModule,\n    RouterModule.forChild([{ path: '', component: AboutPage }])\n  ],\n  declarations: [AboutPage]\n})\nexport class AboutPageModule {}\n","import { AndroidFlavor, APP_INFO_PLUGIN, AppInfoPlugin } from '@airgap/angular-core'\nimport { Component, Inject } from '@angular/core'\nimport { Capacitor } from '@capacitor/core'\nimport { ErrorCategory, handleErrorSentry } from '../../services/sentry-error-handler/sentry-error-handler'\nimport type { IpcRenderer } from 'electron'\n\ndeclare global {\n  interface Window {\n    require: (\n      module: 'electron'\n    ) => {\n      ipcRenderer: IpcRenderer\n    }\n  }\n}\n\n@Component({\n  selector: 'page-about',\n  templateUrl: 'about.html'\n})\nexport class AboutPage {\n  public appName: string = 'APP_NAME'\n  public packageName: string = 'PACKAGE_NAME'\n  public versionName: string = 'VERSION_NUMBER'\n  public versionCode: string | number = 'VERSION_CODE'\n  public appInfo: {\n    appName: string\n    packageName: string\n    versionName: string\n    versionCode: number\n    productFlavor?: AndroidFlavor\n  }\n\n  constructor(@Inject(APP_INFO_PLUGIN) private readonly appInfoPlugin: AppInfoPlugin) {\n    this.updateVersions().catch(handleErrorSentry(ErrorCategory.CORDOVA_PLUGIN))\n  }\n\n  public async updateVersions(): Promise<void> {\n    if (Capacitor.getPlatform() === 'electron') {\n      if (window.require) {\n        // TODO: Look into ElectronProcess\n        const { ipcRenderer } = window.require('electron')\n        this.appInfo = ipcRenderer.sendSync('AppInfo', '')\n      }\n    } else {\n      this.appInfo = await this.appInfoPlugin.get()\n    }\n\n    this.appName = this.appInfo.appName\n    this.packageName = this.appInfo.packageName\n    this.versionName = this.appInfo.versionName\n    this.versionCode = this.appInfo.versionCode\n  }\n}\n","<ion-header class=\"ion-no-border\">\n  <ion-grid fixed=\"true\" class=\"ion-no-padding\">\n    <ion-toolbar>\n      <ion-buttons slot=\"start\">\n        <ion-back-button defaultHref=\"/tabs/settings\"></ion-back-button>\n      </ion-buttons>\n      <ion-title>{{ 'about.title' | translate }}</ion-title>\n    </ion-toolbar>\n  </ion-grid>\n</ion-header>\n\n<ion-content class=\"ion-padding\">\n  <ion-item>{{ appName }}</ion-item>\n  <ion-item>{{ packageName }}</ion-item>\n  <ion-item>{{ versionCode }}</ion-item>\n  <ion-item>{{ versionName }}</ion-item>\n</ion-content>\n"],"sourceRoot":"webpack:///"}