{"version":3,"sources":["./src/app/pages/transaction-confirm/transaction-confirm.module.ts","./src/app/pages/transaction-confirm/transaction-confirm.ts","./src/app/pages/transaction-confirm/transaction-confirm.html"],"names":[],"mappings":"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","file":"pages-transaction-confirm-transaction-confirm-module.js","sourcesContent":["import { CommonModule } from '@angular/common'\nimport { NgModule } from '@angular/core'\nimport { FormsModule } from '@angular/forms'\nimport { RouterModule } from '@angular/router'\nimport { IonicModule } from '@ionic/angular'\nimport { TranslateModule } from '@ngx-translate/core'\n\nimport { ComponentsModule } from '../../components/components.module'\n\nimport { TransactionConfirmPage } from './transaction-confirm'\n\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    FormsModule,\n    TranslateModule,\n    ComponentsModule,\n    RouterModule.forChild([{ path: '', component: TransactionConfirmPage }])\n  ],\n  declarations: [TransactionConfirmPage]\n})\nexport class TransactionConfirmPageModule {}\n","import { partition, ProtocolService } from '@airgap/angular-core'\nimport { BeaconRequestOutputMessage, BeaconResponseInputMessage } from '@airgap/beacon-sdk'\nimport {\n  AirGapMarketWallet,\n  IACMessageDefinitionObject,\n  IACMessageType,\n  ICoinProtocol,\n  MainProtocolSymbols,\n  SignedTransaction,\n  TezosSaplingProtocol,\n  RawEthereumTransaction\n} from '@airgap/coinlib-core'\nimport { NetworkType } from '@airgap/coinlib-core/utils/ProtocolNetwork'\nimport { Component } from '@angular/core'\nimport { ActivatedRoute, Router } from '@angular/router'\nimport { AlertController, LoadingController, Platform, ToastController } from '@ionic/angular'\nimport BigNumber from 'bignumber.js'\nimport { AccountProvider } from 'src/app/services/account/account.provider'\nimport { BrowserService } from 'src/app/services/browser/browser.service'\nimport { DataService, DataServiceKey } from 'src/app/services/data/data.service'\n\nimport { BeaconService } from '../../services/beacon/beacon.service'\nimport { PushBackendProvider } from '../../services/push-backend/push-backend'\nimport { ErrorCategory, handleErrorSentry } from '../../services/sentry-error-handler/sentry-error-handler'\nimport { WalletStorageKey, WalletStorageService } from '../../services/storage/storage'\nimport { WalletconnectService } from 'src/app/services/walletconnect/walletconnect.service'\n\nconst SECOND: number = 1000\n\nconst TOAST_DURATION: number = SECOND * 3\nconst TOAST_ERROR_DURATION: number = SECOND * 5\nconst TIMEOUT_TRANSACTION_QUEUED: number = SECOND * 20\n\n@Component({\n  selector: 'page-transaction-confirm',\n  templateUrl: 'transaction-confirm.html',\n  styleUrls: ['./transaction-confirm.scss']\n})\nexport class TransactionConfirmPage {\n  public messageDefinitionObjects: IACMessageDefinitionObject[]\n\n  public txInfos: [string, ICoinProtocol, BeaconRequestOutputMessage | { transaction: RawEthereumTransaction; id: string }][] = []\n  public protocols: ICoinProtocol[] = []\n\n  constructor(\n    private readonly loadingCtrl: LoadingController,\n    private readonly toastCtrl: ToastController,\n    private readonly router: Router,\n    private readonly route: ActivatedRoute,\n    private readonly alertCtrl: AlertController,\n    private readonly platform: Platform,\n    private readonly storageProvider: WalletStorageService,\n    private readonly beaconService: BeaconService,\n    private readonly pushBackendProvider: PushBackendProvider,\n    private readonly browserService: BrowserService,\n    private readonly accountService: AccountProvider,\n    private readonly protocolService: ProtocolService,\n    private readonly dataService: DataService,\n    private readonly walletConnectService: WalletconnectService\n  ) {}\n\n  public dismiss(): void {\n    this.router.navigateByUrl('/tabs/portfolio').catch(handleErrorSentry(ErrorCategory.NAVIGATION))\n  }\n\n  public async ionViewWillEnter() {\n    await this.platform.ready()\n    if (this.route.snapshot.data.special) {\n      const info = this.route.snapshot.data.special\n      this.messageDefinitionObjects = info.messageDefinitionObjects\n    }\n\n    // TODO: Multi messages\n    // tslint:disable-next-line:no-unnecessary-type-assertion\n    this.messageDefinitionObjects.forEach(async (messageObject) => {\n      const protocol = await this.protocolService.getProtocol(messageObject.protocol)\n\n      const wallet = this.accountService.walletBySerializerAccountIdentifier(\n        (messageObject.payload as SignedTransaction).accountIdentifier,\n        messageObject.protocol\n      )\n\n      const [request, savedProtocol] = await this.beaconService.getVaultRequest()\n\n      const selectedProtocol =\n        request && savedProtocol && savedProtocol.identifier === protocol.identifier\n          ? savedProtocol\n          : wallet && wallet.protocol\n          ? wallet.protocol\n          : protocol\n\n      this.txInfos.push([(messageObject.payload as SignedTransaction).transaction, selectedProtocol, request])\n      this.protocols.push(selectedProtocol)\n    })\n  }\n\n  public async broadcastTransaction() {\n    if (this.protocols.length === 1 && this.protocols[0].identifier === MainProtocolSymbols.XTZ_SHIELDED) {\n      // temporary\n      await this.wrapInTezosOperation(this.protocols[0] as TezosSaplingProtocol, this.txInfos[0][0])\n      return\n    }\n\n    const loading = await this.loadingCtrl.create({\n      message: 'Broadcasting...'\n    })\n\n    loading.present().catch(handleErrorSentry(ErrorCategory.NAVIGATION))\n\n    const interval = setTimeout(async () => {\n      loading.dismiss().catch(handleErrorSentry(ErrorCategory.NAVIGATION))\n      const toast: HTMLIonToastElement = await this.toastCtrl.create({\n        duration: TOAST_DURATION,\n        message: 'Transaction queued. It might take some time until your TX shows up!',\n        buttons: [\n          {\n            text: 'Ok',\n            role: 'cancel'\n          }\n        ],\n        position: 'bottom'\n      })\n      toast.present().catch(handleErrorSentry(ErrorCategory.IONIC_TOAST))\n\n      this.router.navigateByUrl('/tabs/portfolio').catch(handleErrorSentry(ErrorCategory.NAVIGATION))\n    }, TIMEOUT_TRANSACTION_QUEUED)\n\n    this.txInfos.forEach(async ([signedTx, protocol, request], index) => {\n      protocol\n        .broadcastTransaction(signedTx)\n        .then(async (txId) => {\n          if (request) {\n            // TODO: Type\n            if (request['transaction']) {\n              this.walletConnectService.approveRequest(request.id, txId)\n            } else {\n              const response = {\n                id: request.id,\n                type: this.beaconService.getResponseByRequestType((request as BeaconRequestOutputMessage).type),\n                transactionHash: txId\n              } as BeaconResponseInputMessage\n              this.beaconService.respond(response, request as any).catch(handleErrorSentry(ErrorCategory.BEACON))\n            }\n          }\n\n          if (interval) {\n            clearInterval(interval)\n          }\n          // TODO: Remove once we introduce pending transaction handling\n          // TODO: Multi messages\n          // tslint:disable-next-line:no-unnecessary-type-assertion\n          const signedTxWrapper = this.messageDefinitionObjects[index].payload as SignedTransaction\n          const lastTx: {\n            protocol: string\n            accountIdentifier: string\n            date: number\n          } = {\n            protocol: this.messageDefinitionObjects[index].protocol,\n            accountIdentifier: signedTxWrapper.accountIdentifier,\n            date: new Date().getTime()\n          }\n          this.storageProvider.set(WalletStorageKey.LAST_TX_BROADCAST, lastTx).catch(handleErrorSentry(ErrorCategory.STORAGE))\n\n          loading.dismiss().catch(handleErrorSentry(ErrorCategory.NAVIGATION))\n\n          this.showTransactionSuccessfulAlert(protocol, txId)\n\n          // POST TX TO BACKEND\n          // Only send it if we are on mainnet\n          if (protocol.options.network.type === NetworkType.MAINNET) {\n            const signed = (\n              await protocol.getTransactionDetailsFromSigned(this.messageDefinitionObjects[index].payload as SignedTransaction)\n            )[0] as any\n            // necessary for the transaction backend\n            signed.amount = signed.amount.toString()\n            signed.fee = signed.fee.toString()\n            signed.signedTx = signedTx\n            signed.hash = txId\n            this.pushBackendProvider.postPendingTx(signed) // Don't await\n          }\n          // END POST TX TO BACKEND\n        })\n        .catch((error) => {\n          if (interval) {\n            clearInterval(interval)\n          }\n\n          handleErrorSentry(ErrorCategory.COINLIB)(error)\n\n          loading.dismiss().catch(handleErrorSentry(ErrorCategory.NAVIGATION))\n\n          // TODO: Remove this special error case once we remove web3 from the coin-lib\n          if (error && error.message && error.message.startsWith('Failed to check for transaction receipt')) {\n            ;(protocol.getTransactionDetailsFromSigned(this.messageDefinitionObjects[index].payload as SignedTransaction) as any).then(\n              (signed) => {\n                if (signed.hash) {\n                  this.showTransactionSuccessfulAlert(protocol, signed.hash)\n                  // POST TX TO BACKEND\n                  // necessary for the transaction backend\n                  signed.amount = signed.amount.toString()\n                  signed.fee = signed.fee.toString()\n                  signed.signedTx = signedTx\n                  this.pushBackendProvider.postPendingTx(signed) // Don't await\n                  // END POST TX TO BACKEND\n                } else {\n                  handleErrorSentry(ErrorCategory.COINLIB)('No transaction hash present in signed ETH transaction')\n                }\n              }\n            )\n          } else {\n            this.toastCtrl\n              .create({\n                duration: TOAST_ERROR_DURATION,\n                message: 'Transaction broadcasting failed: ' + error,\n                buttons: [\n                  {\n                    text: 'Ok',\n                    role: 'cancel'\n                  }\n                ],\n                position: 'bottom'\n              })\n              .then((toast) => {\n                toast.present().catch(handleErrorSentry(ErrorCategory.NAVIGATION))\n              })\n              .catch(handleErrorSentry(ErrorCategory.IONIC_TOAST))\n          }\n          this.router.navigateByUrl('/tabs/portfolio').catch(handleErrorSentry(ErrorCategory.NAVIGATION))\n        })\n    })\n  }\n\n  private async showTransactionSuccessfulAlert(protocol: ICoinProtocol, transactionHash: string): Promise<void> {\n    const blockexplorer: string = await protocol.getBlockExplorerLinkForTxId(transactionHash)\n    this.alertCtrl\n      .create({\n        header: 'Transaction broadcasted!',\n        message: 'Your transaction has been successfully broadcasted',\n        buttons: [\n          {\n            text: 'Open Blockexplorer',\n            handler: (): void => {\n              this.browserService.openUrl(blockexplorer)\n\n              this.router.navigateByUrl('/tabs/portfolio').catch(handleErrorSentry(ErrorCategory.NAVIGATION))\n            }\n          },\n          {\n            text: 'Ok',\n            handler: (): void => {\n              this.router.navigateByUrl('/tabs/portfolio').catch(handleErrorSentry(ErrorCategory.NAVIGATION))\n            }\n          }\n        ]\n      })\n      .then((alert: HTMLIonAlertElement) => {\n        alert.present().catch(handleErrorSentry(ErrorCategory.NAVIGATION))\n      })\n      .catch(handleErrorSentry(ErrorCategory.IONIC_ALERT))\n  }\n\n  private async wrapInTezosOperation(protocol: TezosSaplingProtocol, transaction: string): Promise<void> {\n    const wallet = await this.selectTezosTzAccount(protocol)\n    const unsignedTx = await protocol.wrapSaplingTransactions(\n      wallet.publicKey,\n      transaction,\n      new BigNumber(wallet.protocol.feeDefaults.medium).shiftedBy(wallet.protocol.feeDecimals).toString(),\n      true\n    )\n\n    const airGapTxs = await protocol.getTransactionDetails(\n      {\n        publicKey: wallet.publicKey,\n        transaction: unsignedTx\n      },\n      { knownViewingKeys: this.accountService.getKnownViewingKeys() }\n    )\n\n    this.accountService.startInteraction(wallet, unsignedTx, IACMessageType.TransactionSignRequest, airGapTxs)\n  }\n\n  private async selectTezosTzAccount(protocol: ICoinProtocol): Promise<AirGapMarketWallet> {\n    return new Promise<AirGapMarketWallet>((resolve) => {\n      const wallets: AirGapMarketWallet[] = this.accountService.getWalletList()\n      const [compatibleWallets, incompatibleWallets]: [AirGapMarketWallet[], AirGapMarketWallet[]] = partition<AirGapMarketWallet>(\n        wallets,\n        (wallet: AirGapMarketWallet) => wallet.protocol.identifier === MainProtocolSymbols.XTZ\n      )\n\n      const info = {\n        actionType: 'broadcast',\n        targetIdentifier: protocol.identifier,\n        compatibleWallets,\n        incompatibleWallets,\n        callback: resolve\n      }\n      this.dataService.setData(DataServiceKey.ACCOUNTS, info)\n      this.router.navigateByUrl(`/select-wallet/${DataServiceKey.ACCOUNTS}`).catch(handleErrorSentry(ErrorCategory.NAVIGATION))\n    })\n  }\n}\n","<ion-header class=\"ion-no-border\">\n  <ion-grid fixed=\"true\" class=\"ion-no-padding\">\n    <ion-toolbar>\n      <ion-buttons slot=\"start\">\n        <ion-back-button defaultHref=\"/\"></ion-back-button>\n      </ion-buttons>\n      <ion-title>{{ 'transaction-confirm.title' | translate }}</ion-title>\n    </ion-toolbar>\n  </ion-grid>\n</ion-header>\n\n<ion-content class=\"ion-padding\">\n  <ion-grid fixed=\"true\" class=\"ion-no-padding\">\n    <signed-transaction [signedTxs]=\"messageDefinitionObjects\" [protocols]=\"protocols\"></signed-transaction>\n  </ion-grid>\n  <ion-fab vertical=\"bottom\" slot=\"fixed\">\n    <ion-row>\n      <ion-col>\n        <ion-button size=\"default\" expand=\"full\" color=\"secondary\" (click)=\"dismiss()\" shape=\"round\">\n          <ion-icon slot=\"start\" name=\"close\"></ion-icon>\n          {{ 'transaction-confirm.decline_label' | translate }}\n        </ion-button>\n      </ion-col>\n      <ion-col>\n        <ion-button size=\"default\" expand=\"full\" color=\"primary\" (click)=\"broadcastTransaction()\" shape=\"round\">\n          <ion-icon slot=\"start\" name=\"checkmark\"></ion-icon>\n          {{ 'transaction-confirm.confirm_label' | translate }}\n        </ion-button>\n      </ion-col>\n    </ion-row>\n  </ion-fab>\n</ion-content>\n"],"sourceRoot":"webpack:///"}