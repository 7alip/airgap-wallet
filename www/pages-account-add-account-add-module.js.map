{"version":3,"sources":["./src/app/pages/account-add/account-add.module.ts","./src/app/pages/account-add/account-add.ts","./src/app/pages/account-add/account-add.html"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8C;AAEF;AACE;AACF;AACS;AAEgB;AAEvB;;;AAavC,MAAM,oBAAoB;;wFAApB,oBAAoB;mGAApB,oBAAoB;uGAVtB;YACP,0DAAW;YACX,4DAAY;YACZ,0DAAW;YACX,8EAAgB;YAChB,mEAAe;YACf,4DAAY,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,2DAAc,EAAE,CAAC,CAAC;SACjE;mIAGU,oBAAoB,mBAFhB,2DAAc,aAP3B,0DAAW;QACX,4DAAY;QACZ,0DAAW;QACX,8EAAgB;QAChB,mEAAe;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjBmC;AACwD;AACtC;AAEhC;AACC;AAEgC;AACK;AACV;AACuC;AAC9B;AAC8C;;;;;;;;;;;;;ICKrH,gFAAwH;IACtH,yEAA8B;IAC5B,wDACF;;IAAA,6DAAI;IACN,6DAAW;;IAFP,2DACF;IADE,qKACF;;;;IAEF,qFAAsH;IAAvG,sXAA8B;IAAyE,6DAAgB;;;IAAtC,kFAAqB;;;;IACrH,qFAIC;IAHC,kYAAoC;IAGrC,6DAAgB;;;IADf,qFAAwB;;;IAG1B,gFAA8E;IAC5E,yEAA8B;IAC5B,wDACF;;IAAA,6DAAI;IACN,6DAAW;;IAFP,2DACF;IADE,mKACF;;;;IAEF,qFAKC;IAJC,mZAA+C;IAIhD,6DAAgB;;;IAFf,0FAA4B;;;;IAG9B,qFAIC;IAHC,oYAAoC;IAGrC,6DAAgB;;;IADf,sFAAwB;;ADhBzB,MAAM,cAAc;IAqBzB,YACmB,QAAkB,EAClB,eAAgC,EAChC,eAAgC,EAChC,MAAc,EACd,aAA4B,EAC5B,WAAwB;QALxB,aAAQ,GAAR,QAAQ,CAAU;QAClB,oBAAe,GAAf,eAAe,CAAiB;QAChC,oBAAe,GAAf,eAAe,CAAiB;QAChC,WAAM,GAAN,MAAM,CAAQ;QACd,kBAAa,GAAb,aAAa,CAAe;QAC5B,gBAAW,GAAX,WAAW,CAAa;QA1BpC,eAAU,GAAW,EAAE;QACvB,8BAAyB,GAAoB,EAAE;QAC/C,gCAA2B,GAAoB,EAAE;QACjD,6BAAwB,GAAoB,EAAE;QAC9C,+BAA0B,GAAyB;YACxD;gBACE,IAAI,EAAE,+BAA+B;gBACrC,UAAU,EAAE,uFAAwB,CAAC,MAAM;gBAC3C,MAAM,EAAE,KAAK;gBACb,cAAc,EAAE,wEAAmB,CAAC,GAAG;aACxC;SACF;QAEM,6BAAwB,GAAoB,EAAE;QAC9C,wCAAmC,GAAoB,EAAE;QACzD,qCAAgC,GAAoB,EAAE;QACtD,uCAAkC,GAAyB,EAAE;QAE5D,yBAAoB,GAAyB,CAAC,uEAAkB,CAAC,MAAM,EAAE,uEAAkB,CAAC,OAAO,EAAE,uEAAkB,CAAC,QAAQ,CAAC;IAStI,CAAC;IAES,gBAAgB;;YAC3B,IAAI,CAAC,yBAAyB,GAAG,CAAC,MAAM,IAAI,CAAC,eAAe,CAAC,kBAAkB,EAAE,CAAC,CAAC,MAAM,CACvF,CAAC,QAAQ,EAAE,EAAE,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,KAAK,sFAAW,CAAC,OAAO,CACpE;YACD,MAAM,4BAA4B,GAAG,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,CAC/D,EAAE,EACF,MAAM,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,wEAAmB,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE,EAAE,CAAC,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC,CAAC,CACxH;YAED,IAAI,CAAC,2BAA2B,GAAG,4BAA4B,CAAC,MAAM,CACpE,CAAC,QAAQ,EAAE,EAAE,CACX,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC,QAAQ,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC;gBACrE,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,KAAK,sFAAW,CAAC,OAAO;gBACrD,QAAQ,CAAC,UAAU,KAAK,uEAAkB,CAAC,MAAM,CACpD;YAED,IAAI,CAAC,wBAAwB,GAAG,4BAA4B,CAAC,MAAM,CACjE,CAAC,QAAQ,EAAE,EAAE,CACX,CAAC,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC,QAAQ,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC;gBACtE,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,KAAK,sFAAW,CAAC,OAAO;gBACrD,QAAQ,CAAC,UAAU,KAAK,uEAAkB,CAAC,MAAM,CACpD;YACD,IAAI,CAAC,eAAe,EAAE;QACxB,CAAC;KAAA;IAEM,iBAAiB;QACtB,IAAI,CAAC,eAAe,EAAE;IACxB,CAAC;IAEM,eAAe;QACpB,MAAM,mBAAmB,GAAG,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE;QAEzD,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC,yBAAyB,CAAC,MAAM,CACnE,CAAC,QAAQ,EAAE,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,mBAAmB,CAAC,IAAI,QAAQ,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,mBAAmB,CAAC,CACvI;QACD,IAAI,CAAC,mCAAmC,GAAG,IAAI,CAAC,2BAA2B,CAAC,MAAM,CAChF,CAAC,QAAQ,EAAE,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,mBAAmB,CAAC,IAAI,QAAQ,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,mBAAmB,CAAC,CACvI;QACD,IAAI,CAAC,gCAAgC,GAAG,IAAI,CAAC,wBAAwB,CAAC,MAAM,CAC1E,CAAC,QAAQ,EAAE,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,mBAAmB,CAAC,IAAI,QAAQ,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,mBAAmB,CAAC,CACvI;QACD,IAAI,CAAC,kCAAkC,GAAG,IAAI,CAAC,0BAA0B,CAAC,MAAM,CAC9E,CAAC,QAAQ,EAAE,EAAE,CACX,QAAQ,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,mBAAmB,CAAC;YACzD,QAAQ,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,mBAAmB,CAAC;YAC/D,QAAQ,CAAC,cAAc,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,mBAAmB,CAAC,CACtE;IACH,CAAC;IAEM,UAAU,CAAC,QAAuB;QACvC,MAAM,uBAAuB,GAAG,IAAI,CAAC,aAAa,CAAC,mBAAmB,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,SAAS,CAAC;QAC/G,IAAI,CAAC,uBAAuB,EAAE;YAC5B,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC;SAC/B;aAAM;YACL,IAAI,CAAC,8BAA8B,CAAC,QAAQ,CAAC;SAC9C;IACH,CAAC;IAEM,aAAa,CAAC,WAA0B;QAC7C,MAAM,sBAAsB,GAAG,WAAW,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAwB;QAC1F,IAAI,IAAI,CAAC,iBAAiB,CAAC,sBAAsB,EAAE,WAAW,CAAC,OAAO,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE;YAC1F,IAAI,CAAC,MAAM;iBACR,aAAa,CAAC,uBAAuB,0EAAc,CAAC,QAAQ,IAAI,WAAW,CAAC,UAAU,IAAI,WAAW,CAAC,OAAO,CAAC,OAAO,CAAC,UAAU,EAAE,CAAC;iBACnI,KAAK,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;SACtC;aAAM;YACL,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,UAAU,CAAC;SAC5C;IACH,CAAC;IAEM,oBAAoB,CAAC,iBAAqC;QAC/D,IAAI,IAAI,CAAC,iBAAiB,CAAC,iBAAiB,CAAC,cAAc,EAAE,iBAAiB,CAAC,OAAO,CAAC,EAAE;YACvF,IAAI,CAAC,MAAM;iBACR,aAAa,CACZ,4BAA4B,0EAAc,CAAC,QAAQ,IAAI,iBAAiB,CAAC,cAAc,IAAI,iBAAiB,CAAC,OAAO,IAAI,iBAAiB,CAAC,UAAU,EAAE,CACvJ;iBACA,KAAK,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;SACtC;aAAM;YACL,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,cAAc,CAAC;SACtD;IACH,CAAC;IAEO,iBAAiB,CAAC,kBAAuC,EAAE,iBAA0B;QAC3F,OAAO,CACL,IAAI,CAAC,eAAe;aACjB,aAAa,EAAE;aACf,MAAM,CACL,CAAC,MAAM,EAAE,EAAE,CACT,MAAM,CAAC,QAAQ,CAAC,UAAU,KAAK,kBAAkB;YACjD,CAAC,CAAC,iBAAiB,IAAI,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,UAAU,KAAK,iBAAiB,CAAC,CAC3F,CAAC,MAAM,GAAG,CAAC,CACf;IACH,CAAC;IAEO,8BAA8B,CAAC,QAAuB;QAC5D,MAAM,IAAI,GAAG;YACX,QAAQ,EAAE,CAAC,eAA6C,EAAE,EAAE;gBAC1D,QAAQ,eAAe,EAAE;oBACvB,KAAK,wIAA4B,CAAC,KAAK;wBACrC,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC;wBAC9B,MAAK;oBACP,KAAK,wIAA4B,CAAC,MAAM;wBACtC,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC;wBAC/B,MAAK;oBACP;wBACE,OAAO,CAAC,GAAG,CAAC,2CAA2C,CAAC;iBAC3D;YACH,CAAC;SACF;QAED,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,0EAAc,CAAC,WAAW,EAAE,IAAI,CAAC;QAC1D,IAAI,CAAC,MAAM;aACR,aAAa,CAAC,yCAAyC,0EAAc,CAAC,WAAW,EAAE,EAAE,EAAE,kBAAkB,EAAE,IAAI,EAAE,CAAC;aAClH,KAAK,CAAC,6GAAiB,CAAC,iGAAa,CAAC,UAAU,CAAC,CAAC;IACvD,CAAC;IAEO,gBAAgB,CAAC,QAAuB;QAC9C,IAAI,CAAC,MAAM;aACR,aAAa,CAAC,qCAAqC,0EAAc,CAAC,QAAQ,IAAI,QAAQ,CAAC,UAAU,EAAE,CAAC;aACpG,KAAK,CAAC,6GAAiB,CAAC,iGAAa,CAAC,UAAU,CAAC,CAAC;IACvD,CAAC;IAEO,eAAe,CAAC,QAAuB;QAC7C,IAAI,IAAI,CAAC,eAAe,CAAC,kBAAkB,CAAC,QAAQ,CAAC,EAAE;YACrD,IAAI,CAAC,MAAM;iBACR,aAAa,CAAC,qBAAqB,0EAAc,CAAC,QAAQ,IAAI,QAAQ,CAAC,UAAU,EAAE,CAAC;iBACpF,KAAK,CAAC,6GAAiB,CAAC,iGAAa,CAAC,UAAU,CAAC,CAAC;SACtD;aAAM;YACL,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,UAAU,CAAC;SACzC;IACH,CAAC;IAEO,cAAc,CAAC,kBAAmC;QACxD,IAAI,CAAC,MAAM;aACR,aAAa,CAAC,8BAA8B,0EAAc,CAAC,QAAQ,IAAI,kBAAkB,EAAE,CAAC;aAC5F,KAAK,CAAC,6GAAiB,CAAC,iGAAa,CAAC,UAAU,CAAC,CAAC;IACvD,CAAC;IAEM,cAAc;QACnB,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC,6GAAiB,CAAC,iGAAa,CAAC,UAAU,CAAC,CAAC;IAC5F,CAAC;;4EAzKU,cAAc;+FAAd,cAAc;QC3B3B,iFAAkC;QAChC,+EAA8C;QAC5C,+EAAa;QACX,kFAA0B;QACxB,iFAAmD;QACrD,6DAAc;QACd,6EAAW;QAAA,wDAAqC;;QAAA,6DAAY;QAC9D,6DAAc;QACd,+EAAa;QACX,oFAAoF;QAA3D,+LAAwB,6FAAc,uBAAmB,IAAjC;QAAmC,6DAAgB;QACtG,6DAAc;QAChB,6DAAW;QACb,6DAAa;QAEb,mFAAiC;QAC/B,gFAA8C;QAC5C,gFAAuB;QACrB,uHAIW;QACX,iIAAsI;QACtI,iIAIiB;QAEjB,uHAIW;QACX,iIAKiB;QACjB,iIAIiB;QACnB,6DAAW;QACb,6DAAW;QACb,6DAAc;QACd,gFAAyD;QACvD,uFAAwF;QAA3B,gJAAS,oBAAgB,IAAC;QACrF,4EAA4C;QAC9C,6DAAiB;QACnB,6DAAU;;QA9CO,2DAAqC;QAArC,uJAAqC;QAGvB,2DAAwB;QAAxB,oFAAwB;QAQtB,2DAA2F;QAA3F,gKAA2F;QAKnD,2DAA2B;QAA3B,kGAA2B;QAGpE,2DAAsC;QAAtC,6GAAsC;QAIrC,2DAAiD;QAAjD,kHAAiD;QAO9C,2DAAqC;QAArC,4GAAqC;QAMzC,2DAAmC;QAAnC,0GAAmC","file":"pages-account-add-account-add-module.js","sourcesContent":["import { CommonModule } from '@angular/common'\nimport { NgModule } from '@angular/core'\nimport { FormsModule } from '@angular/forms'\nimport { RouterModule } from '@angular/router'\nimport { IonicModule } from '@ionic/angular'\nimport { TranslateModule } from '@ngx-translate/core'\n\nimport { ComponentsModule } from '../../components/components.module'\n\nimport { AccountAddPage } from './account-add'\n\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    FormsModule,\n    ComponentsModule,\n    TranslateModule,\n    RouterModule.forChild([{ path: '', component: AccountAddPage }])\n  ],\n  declarations: [AccountAddPage]\n})\nexport class AccountAddPageModule {}\n","import { ProtocolService } from '@airgap/angular-core'\nimport { ICoinProtocol, MainProtocolSymbols, ProtocolSymbols, SubProtocolSymbols } from '@airgap/coinlib-core'\nimport { NetworkType } from '@airgap/coinlib-core/utils/ProtocolNetwork'\nimport { Component } from '@angular/core'\nimport { Router } from '@angular/router'\nimport { Platform } from '@ionic/angular'\n\nimport { AccountProvider } from '../../services/account/account.provider'\nimport { DataService, DataServiceKey } from '../../services/data/data.service'\nimport { LedgerService } from '../../services/ledger/ledger-service'\nimport { ErrorCategory, handleErrorSentry } from '../../services/sentry-error-handler/sentry-error-handler'\nimport { GenericSubProtocolSymbol } from '../../types/GenericProtocolSymbols'\nimport { AccountImportInteractionType } from '../account-import-interaction-selection/account-import-interaction-selection'\n\ninterface GenericSubProtocol {\n  name: string\n  identifier: GenericSubProtocolSymbol\n  symbol: string\n  mainIdentifier: MainProtocolSymbols\n  network?: string\n}\n\n@Component({\n  selector: 'page-account-add',\n  templateUrl: 'account-add.html',\n  styleUrls: ['./account-add.scss']\n})\nexport class AccountAddPage {\n  public searchTerm: string = ''\n  public supportedAccountProtocols: ICoinProtocol[] = []\n  public featuredSubAccountProtocols: ICoinProtocol[] = []\n  public otherSubAccountProtocols: ICoinProtocol[] = []\n  public genericSubAccountProtocols: GenericSubProtocol[] = [\n    {\n      name: 'account-add.generic.xtz_label',\n      identifier: GenericSubProtocolSymbol.XTZ_FA,\n      symbol: 'XTZ',\n      mainIdentifier: MainProtocolSymbols.XTZ\n    }\n  ]\n\n  public filteredAccountProtocols: ICoinProtocol[] = []\n  public filteredFeaturedSubAccountProtocols: ICoinProtocol[] = []\n  public filteredOtherSubAccountProtocols: ICoinProtocol[] = []\n  public filteredGenericSubAccountProtocols: GenericSubProtocol[] = []\n\n  private featuredSubProtocols: SubProtocolSymbols[] = [SubProtocolSymbols.XTZ_KT, SubProtocolSymbols.XTZ_YOU, SubProtocolSymbols.XTZ_UUSD]\n\n  constructor(\n    private readonly platform: Platform,\n    private readonly accountProvider: AccountProvider,\n    private readonly protocolService: ProtocolService,\n    private readonly router: Router,\n    private readonly ledgerService: LedgerService,\n    private readonly dataService: DataService\n  ) {}\n\n  public async ionViewWillEnter() {\n    this.supportedAccountProtocols = (await this.protocolService.getActiveProtocols()).filter(\n      (protocol) => protocol.options.network.type === NetworkType.MAINNET\n    )\n    const supportedSubAccountProtocols = Array.prototype.concat.apply(\n      [],\n      await Promise.all(Object.values(MainProtocolSymbols).map((protocol) => this.protocolService.getSubProtocols(protocol)))\n    )\n\n    this.featuredSubAccountProtocols = supportedSubAccountProtocols.filter(\n      (protocol) =>\n        this.featuredSubProtocols.includes(protocol.identifier.toLowerCase()) &&\n        protocol.options.network.type === NetworkType.MAINNET &&\n        protocol.identifier !== SubProtocolSymbols.XTZ_KT\n    )\n\n    this.otherSubAccountProtocols = supportedSubAccountProtocols.filter(\n      (protocol) =>\n        !this.featuredSubProtocols.includes(protocol.identifier.toLowerCase()) &&\n        protocol.options.network.type === NetworkType.MAINNET &&\n        protocol.identifier !== SubProtocolSymbols.XTZ_KT\n    )\n    this.filterProtocols()\n  }\n\n  public searchTermChanged() {\n    this.filterProtocols()\n  }\n\n  public filterProtocols() {\n    const lowerCaseSearchTerm = this.searchTerm.toLowerCase()\n\n    this.filteredAccountProtocols = this.supportedAccountProtocols.filter(\n      (protocol) => protocol.name.toLowerCase().includes(lowerCaseSearchTerm) || protocol.symbol.toLowerCase().includes(lowerCaseSearchTerm)\n    )\n    this.filteredFeaturedSubAccountProtocols = this.featuredSubAccountProtocols.filter(\n      (protocol) => protocol.name.toLowerCase().includes(lowerCaseSearchTerm) || protocol.symbol.toLowerCase().includes(lowerCaseSearchTerm)\n    )\n    this.filteredOtherSubAccountProtocols = this.otherSubAccountProtocols.filter(\n      (protocol) => protocol.name.toLowerCase().includes(lowerCaseSearchTerm) || protocol.symbol.toLowerCase().includes(lowerCaseSearchTerm)\n    )\n    this.filteredGenericSubAccountProtocols = this.genericSubAccountProtocols.filter(\n      (protocol) =>\n        protocol.name.toLowerCase().includes(lowerCaseSearchTerm) ||\n        protocol.identifier.toLowerCase().includes(lowerCaseSearchTerm) ||\n        protocol.mainIdentifier.toLowerCase().includes(lowerCaseSearchTerm)\n    )\n  }\n\n  public addAccount(protocol: ICoinProtocol) {\n    const isLedgerImportAvailable = this.ledgerService.isProtocolSupported(protocol) && this.platform.is('desktop')\n    if (!isLedgerImportAvailable) {\n      this.importFromVault(protocol)\n    } else {\n      this.showImportInteractionSelection(protocol)\n    }\n  }\n\n  public addSubAccount(subProtocol: ICoinProtocol) {\n    const mainProtocolIdentifier = subProtocol.identifier.split('-')[0] as MainProtocolSymbols\n    if (this.mainAccountExists(mainProtocolIdentifier, subProtocol.options.network.identifier)) {\n      this.router\n        .navigateByUrl(`/sub-account-import/${DataServiceKey.PROTOCOL}/${subProtocol.identifier}/${subProtocol.options.network.identifier}`)\n        .catch((err) => console.error(err))\n    } else {\n      this.showOnboarding(subProtocol.identifier)\n    }\n  }\n\n  public addGenericSubAccount(customSubProtocol: GenericSubProtocol) {\n    if (this.mainAccountExists(customSubProtocol.mainIdentifier, customSubProtocol.network)) {\n      this.router\n        .navigateByUrl(\n          `/sub-account-add-generic/${DataServiceKey.PROTOCOL}/${customSubProtocol.mainIdentifier}/${customSubProtocol.network}/${customSubProtocol.identifier}`\n        )\n        .catch((err) => console.error(err))\n    } else {\n      this.showOnboarding(customSubProtocol.mainIdentifier)\n    }\n  }\n\n  private mainAccountExists(protocolIdentifier: MainProtocolSymbols, networkIdentifier?: string): boolean {\n    return (\n      this.accountProvider\n        .getWalletList()\n        .filter(\n          (wallet) =>\n            wallet.protocol.identifier === protocolIdentifier &&\n            (!networkIdentifier || wallet.protocol.options.network.identifier === networkIdentifier)\n        ).length > 0\n    )\n  }\n\n  private showImportInteractionSelection(protocol: ICoinProtocol) {\n    const info = {\n      callback: (interactionType: AccountImportInteractionType) => {\n        switch (interactionType) {\n          case AccountImportInteractionType.VAULT:\n            this.importFromVault(protocol)\n            break\n          case AccountImportInteractionType.LEDGER:\n            this.importFromLedger(protocol)\n            break\n          default:\n            console.log('Unknown import interaction type selected.')\n        }\n      }\n    }\n\n    this.dataService.setData(DataServiceKey.INTERACTION, info)\n    this.router\n      .navigateByUrl(`/account-import-interaction-selection/${DataServiceKey.INTERACTION}`, { skipLocationChange: true })\n      .catch(handleErrorSentry(ErrorCategory.NAVIGATION))\n  }\n\n  private importFromLedger(protocol: ICoinProtocol): void {\n    this.router\n      .navigateByUrl(`/account-import-ledger-onboarding/${DataServiceKey.PROTOCOL}/${protocol.identifier}`)\n      .catch(handleErrorSentry(ErrorCategory.NAVIGATION))\n  }\n\n  private importFromVault(protocol: ICoinProtocol): void {\n    if (this.accountProvider.hasInactiveWallets(protocol)) {\n      this.router\n        .navigateByUrl(`/account-activate/${DataServiceKey.PROTOCOL}/${protocol.identifier}`)\n        .catch(handleErrorSentry(ErrorCategory.NAVIGATION))\n    } else {\n      this.showOnboarding(protocol.identifier)\n    }\n  }\n\n  private showOnboarding(protocolIdentifier: ProtocolSymbols) {\n    this.router\n      .navigateByUrl(`/account-import-onboarding/${DataServiceKey.PROTOCOL}/${protocolIdentifier}`)\n      .catch(handleErrorSentry(ErrorCategory.NAVIGATION))\n  }\n\n  public navigateToScan() {\n    this.router.navigateByUrl('/tabs/scan').catch(handleErrorSentry(ErrorCategory.NAVIGATION))\n  }\n}\n","<ion-header class=\"ion-no-border\">\n  <ion-grid fixed=\"true\" class=\"ion-no-padding\">\n    <ion-toolbar>\n      <ion-buttons slot=\"start\">\n        <ion-back-button defaultHref=\"/\"></ion-back-button>\n      </ion-buttons>\n      <ion-title>{{ 'add-account.title' | translate }}</ion-title>\n    </ion-toolbar>\n    <ion-toolbar>\n      <ion-searchbar mode=\"md\" [(ngModel)]=\"searchTerm\" (ionChange)=\"searchTermChanged()\"></ion-searchbar>\n    </ion-toolbar>\n  </ion-grid>\n</ion-header>\n\n<ion-content class=\"ion-padding\">\n  <ion-grid fixed=\"true\" class=\"ion-no-padding\">\n    <ion-list lines=\"none\">\n      <ion-text color=\"primary\" *ngIf=\"filteredAccountProtocols.length > 0 || filteredFeaturedSubAccountProtocols.length > 0\">\n        <p class=\"font--weight__bold\">\n          {{ 'account-add.featured' | translate }}\n        </p>\n      </ion-text>\n      <currency-item (click)=\"addAccount(protocol)\" *ngFor=\"let protocol of filteredAccountProtocols\" [protocol]=\"protocol\"></currency-item>\n      <currency-item\n        (click)=\"addSubAccount(subProtocol)\"\n        *ngFor=\"let subProtocol of filteredFeaturedSubAccountProtocols\"\n        [protocol]=\"subProtocol\"\n      ></currency-item>\n\n      <ion-text color=\"primary\" *ngIf=\"filteredOtherSubAccountProtocols.length > 0\">\n        <p class=\"font--weight__bold\">\n          {{ 'account-add.others' | translate }}\n        </p>\n      </ion-text>\n      <currency-item\n        (click)=\"addGenericSubAccount(genericProtocol)\"\n        *ngFor=\"let genericProtocol of filteredGenericSubAccountProtocols\"\n        [protocol]=\"genericProtocol\"\n        [showSymbol]=\"false\"\n      ></currency-item>\n      <currency-item\n        (click)=\"addSubAccount(subProtocol)\"\n        *ngFor=\"let subProtocol of filteredOtherSubAccountProtocols\"\n        [protocol]=\"subProtocol\"\n      ></currency-item>\n    </ion-list>\n  </ion-grid>\n</ion-content>\n<ion-fab vertical=\"bottom\" horizontal=\"end\" slot=\"fixed\">\n  <ion-fab-button id=\"add-more-coins-button\" color=\"secondary\" (click)=\"navigateToScan()\">\n    <ion-icon name=\"barcode-outline\"></ion-icon>\n  </ion-fab-button>\n</ion-fab>\n"],"sourceRoot":"webpack:///"}