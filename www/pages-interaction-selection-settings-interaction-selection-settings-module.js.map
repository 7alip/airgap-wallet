{"version":3,"sources":["./src/app/pages/interaction-selection-settings/interaction-selection-settings.module.ts","./src/app/pages/interaction-selection-settings/interaction-selection-settings.page.ts","./src/app/pages/interaction-selection-settings/interaction-selection-settings.page.html"],"names":[],"mappings":";;;;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8C;AACF;AAEA;AAE4C;AACnC;AACE;AACT;;;AAavC,MAAM,sCAAsC;;4HAAtC,sCAAsC;qHAAtC,sCAAsC;yHAVxC;YACP,4DAAY;YACZ,0DAAW;YACX,0DAAW;YACX,qEAAgB;YAChB,mEAAe;YACf,4DAAY,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,qGAAgC,EAAE,CAAC,CAAC;SACnF;mIAGU,sCAAsC,mBAFlC,qGAAgC,aAP7C,4DAAY;QACZ,0DAAW;QACX,0DAAW;QACX,qEAAgB;QAChB,mEAAe;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjBsC;AAET;AACwE;AACpB;AACzB;AACkC;;;;;;;;ICOvG,2EAAyD;IACvD,kFAAiB;IACf,8EAAuB;IACrB,iFAAgB;IAAA,uDAAmD;IAAA,4DAAiB;IACpF,gFAAkG;IAA9B,8YAA6B;IAC/F,uDACF;;IAAA,4DAAa;IACf,4DAAW;IACb,4DAAkB;IACpB,4DAAW;;;IANW,0DAAmD;IAAnD,sHAAmD;IAEjE,0DACF;IADE,yLACF;;;IARV,wEAA0E;IACxE,2EAAU;IACR,qJASW;IACb,4DAAW;IACb,qEAAe;;;IAXuB,0DAAqB;IAArB,8FAAqB;;ADAtD,MAAM,gCAAgC;IAK3C,YAA6B,cAA+B,EAAmB,eAAgC;QAAlF,mBAAc,GAAd,cAAc,CAAiB;QAAmB,oBAAe,GAAf,eAAe,CAAiB;QAJxG,uBAAkB,GAA8B,yFAAkB;IAIyC,CAAC;IAEnH,QAAQ;QACN,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,cAAc,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,WAAW,EAAE,EAAE,CAAC,WAAW,CAAC,MAAM,KAAK,uEAAkB,CAAC,MAAM,CAAC;QACvI,IAAI,IAAI,CAAC,kBAAkB,CAAC,MAAM,KAAK,CAAC,EAAE;YACxC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC;SAC9C;IACH,CAAC;IAEK,MAAM,CAAC,WAAoC,EAAE,sBAA+B,KAAK;;YACrF,MAAM,KAAK,GAAwB,MAAM,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;gBACnE,SAAS,EAAE,sIAA6B;gBACxC,cAAc,EAAE;oBACd,WAAW;oBACX,mBAAmB;iBACpB;aACF,CAAC;YAEF,KAAK,CAAC,OAAO,EAAE,CAAC,KAAK,CAAC,oHAAiB,CAAC,wGAAa,CAAC,WAAW,CAAC,CAAC;QACrE,CAAC;KAAA;;gHAxBU,gCAAgC;gHAAhC,gCAAgC;QCb7C,gFAAkC;QAChC,8EAA8C;QAC5C,8EAAa;QACX,iFAA0B;QACxB,gFAAgE;QAClE,4DAAc;QACd,4EAAW;QAAA,uDAAwD;;QAAA,4DAAY;QACjF,4DAAc;QAChB,4DAAW;QACb,4DAAa;QACb,8EAAa;QACX,8IAae;QACjB,4DAAc;;QAnBG,0DAAwD;QAAxD,wKAAwD;QAKxD,0DAAyD;QAAzD,6HAAyD","file":"pages-interaction-selection-settings-interaction-selection-settings-module.js","sourcesContent":["import { NgModule } from '@angular/core'\nimport { CommonModule } from '@angular/common'\nimport { FormsModule } from '@angular/forms'\n\nimport { IonicModule } from '@ionic/angular'\n\nimport { InteractionSelectionSettingsPage } from './interaction-selection-settings.page'\nimport { TranslateModule } from '@ngx-translate/core'\nimport { ComponentsModule } from '@airgap/angular-core'\nimport { RouterModule } from '@angular/router'\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ComponentsModule,\n    TranslateModule,\n    RouterModule.forChild([{ path: '', component: InteractionSelectionSettingsPage }])\n  ],\n  declarations: [InteractionSelectionSettingsPage]\n})\nexport class InteractionSelectionSettingsPageModule {}\n","import { AirGapWalletStatus } from '@airgap/coinlib-core'\nimport { Component, OnInit } from '@angular/core'\nimport { ModalController } from '@ionic/angular'\nimport { InteractionSelectionComponent } from 'src/app/components/interaction-selection/interaction-selection.component'\nimport { AirGapMarketWalletGroup, InteractionSetting } from 'src/app/models/AirGapMarketWalletGroup'\nimport { AccountProvider } from 'src/app/services/account/account.provider'\nimport { ErrorCategory, handleErrorSentry } from 'src/app/services/sentry-error-handler/sentry-error-handler'\n\n@Component({\n  selector: 'app-interaction-selection-settings',\n  templateUrl: './interaction-selection-settings.page.html',\n  styleUrls: ['./interaction-selection-settings.page.scss']\n})\nexport class InteractionSelectionSettingsPage implements OnInit {\n  public interactionSetting: typeof InteractionSetting = InteractionSetting\n  public selectedSetting: InteractionSetting | undefined\n  public activeWalletGroups: AirGapMarketWalletGroup[] | undefined\n\n  constructor(private readonly accountService: AccountProvider, private readonly modalController: ModalController) {}\n\n  ngOnInit() {\n    this.activeWalletGroups = this.accountService.allWalletGroups.filter((walletGroup) => walletGroup.status === AirGapWalletStatus.ACTIVE)\n    if (this.activeWalletGroups.length === 1) {\n      this.select(this.activeWalletGroups[0], true)\n    }\n  }\n\n  async select(walletGroup: AirGapMarketWalletGroup, onlyOneGroupPresent: boolean = false): Promise<void> {\n    const modal: HTMLIonModalElement = await this.modalController.create({\n      component: InteractionSelectionComponent,\n      componentProps: {\n        walletGroup,\n        onlyOneGroupPresent\n      }\n    })\n\n    modal.present().catch(handleErrorSentry(ErrorCategory.IONIC_MODAL))\n  }\n}\n","<ion-header class=\"ion-no-border\">\n  <ion-grid fixed=\"true\" class=\"ion-no-padding\">\n    <ion-toolbar>\n      <ion-buttons slot=\"start\">\n        <ion-back-button defaultHref=\"/tabs/settings\"></ion-back-button>\n      </ion-buttons>\n      <ion-title>{{ 'interaction-selection-settings.title' | translate }}</ion-title>\n    </ion-toolbar>\n  </ion-grid>\n</ion-header>\n<ion-content>\n  <ng-container *ngIf=\"activeWalletGroups && activeWalletGroups.length > 1\">\n    <ion-list>\n      <ion-card *ngFor=\"let walletGroup of activeWalletGroups\">\n        <ion-card-header>\n          <ion-item lines=\"none\">\n            <ion-card-title>{{walletGroup.label ? walletGroup.label : 'Other'}}</ion-card-title>\n            <ion-button color=\"primary\" shape=\"round\" fill=\"outline\" slot=\"end\" (click)=\"select(walletGroup)\">\n              {{ 'interaction-selection-settings.button_text' | translate }}\n            </ion-button>\n          </ion-item>\n        </ion-card-header>\n      </ion-card>\n    </ion-list>\n  </ng-container>\n</ion-content>\n"],"sourceRoot":"webpack:///"}