{"version":3,"sources":["./src/app/pages/account-import/account-import.module.ts","./src/app/pages/account-import/account-import.ts","./src/app/pages/account-import/account-import.html"],"names":[],"mappings":"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","file":"pages-account-import-account-import-module.js","sourcesContent":["import { CommonModule } from '@angular/common'\nimport { NgModule } from '@angular/core'\nimport { FormsModule } from '@angular/forms'\nimport { RouterModule } from '@angular/router'\nimport { IonicModule } from '@ionic/angular'\nimport { TranslateModule } from '@ngx-translate/core'\n\nimport { ComponentsModule } from '../../components/components.module'\n\nimport { AccountImportPage } from './account-import'\n\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    FormsModule,\n    ComponentsModule,\n    TranslateModule,\n    RouterModule.forChild([{ path: '', component: AccountImportPage }])\n  ],\n  declarations: [AccountImportPage]\n})\nexport class AccountImportPageModule {}\n","import { flattened } from '@airgap/angular-core'\nimport { AirGapWalletStatus } from '@airgap/coinlib-core/wallet/AirGapWallet'\nimport { Component, NgZone, OnDestroy } from '@angular/core'\nimport { ActivatedRoute, Router } from '@angular/router'\nimport { LoadingController, NavController, Platform } from '@ionic/angular'\nimport { Subject } from 'rxjs'\nimport { takeUntil } from 'rxjs/operators'\n\nimport { AccountProvider } from '../../services/account/account.provider'\nimport { DataService } from '../../services/data/data.service'\nimport { ErrorCategory, handleErrorSentry } from '../../services/sentry-error-handler/sentry-error-handler'\nimport { AccountSync } from '../../types/AccountSync'\n\ninterface AccountImport extends AccountSync {\n  alreadyExists: boolean\n}\n\n@Component({\n  selector: 'page-account-import',\n  templateUrl: 'account-import.html'\n})\nexport class AccountImportPage implements OnDestroy {\n  public accountImports: Map<string | undefined, AccountImport[]> = new Map()\n  private get allAccountImports(): AccountImport[] {\n    return flattened(Array.from(this.accountImports.values()))\n  }\n\n  public loading: HTMLIonLoadingElement\n  public readonly AirGapWalletStatus: typeof AirGapWalletStatus = AirGapWalletStatus\n\n  private readonly ngDestroyed$: Subject<void> = new Subject()\n\n  constructor(\n    private readonly platform: Platform,\n    private readonly loadingCtrl: LoadingController,\n    private readonly navController: NavController,\n    private readonly route: ActivatedRoute,\n    private readonly router: Router,\n    private readonly accountProvider: AccountProvider,\n    private readonly dataService: DataService,\n    private readonly ngZone: NgZone\n  ) {\n    if (!this.route.snapshot.data.special) {\n      this.router.navigateByUrl('/')\n      window.alert(\"The address you're trying to access is invalid.\")\n      throw new Error()\n    }\n  }\n\n  public async ionViewWillEnter(): Promise<void> {\n    this.accountImports.clear()\n    if (this.route.snapshot.data.special) {\n      this.dataService\n        .getAccountSyncs()\n        .pipe(takeUntil(this.ngDestroyed$))\n        .subscribe((accountSyncs: AccountSync[]) => {\n          accountSyncs.forEach((accountSync: AccountSync) => {\n            const groupLabel: string | undefined = accountSync.groupLabel\n            if (!this.accountImports.has(groupLabel)) {\n              this.accountImports.set(groupLabel, [])\n            }\n            this.accountImports.get(groupLabel).push({\n              ...accountSync,\n              alreadyExists: false\n            })\n          })\n          this.ionViewDidEnter()\n        })\n    }\n\n    await this.platform.ready()\n\n    this.loading = await this.loadingCtrl.create({\n      message: 'Syncing...',\n      backdropDismiss: true\n    })\n\n    this.loading.present().catch(handleErrorSentry(ErrorCategory.NAVIGATION))\n  }\n\n  public async ionViewDidEnter(): Promise<void> {\n    const message = this.allAccountImports.map((accountImport) => {\n      return {\n        protocolIdentifier: accountImport.wallet.protocol.identifier,\n        publicKey: accountImport.wallet.publicKey,\n        isExtendedPublicKey: accountImport.wallet.isExtendedPublicKey,\n        derivationPath: accountImport.wallet.derivationPath,\n        masterFingerprint: accountImport.wallet.masterFingerprint,\n        status: accountImport.wallet.status\n      }\n    })\n\n    const airGapWorker: Worker = new Worker('./assets/workers/airgap-coin-lib.js')\n\n    airGapWorker.postMessage(message)\n\n    airGapWorker.onmessage = (event) => {\n      const derivedAddressesMap = event.data\n\n      this.allAccountImports.forEach((accountImport: AccountImport) => {\n        accountImport.alreadyExists = this.accountProvider.walletExists(accountImport.wallet)\n\n        const key = `${accountImport.wallet.protocol.identifier}_${accountImport.wallet.publicKey}`\n        accountImport.wallet.addresses = derivedAddressesMap[key]\n        accountImport.wallet\n          .synchronize()\n          .then(() => {\n            if (accountImport.wallet.currentBalance !== undefined && accountImport.wallet.currentBalance.gt(0)) {\n              accountImport.wallet.status = AirGapWalletStatus.ACTIVE\n            }\n            this.ngZone.run(() => {\n              this.accountProvider.triggerWalletChanged()\n            })\n          })\n          .catch(handleErrorSentry(ErrorCategory.WALLET_PROVIDER))\n        this.loading.dismiss().catch(handleErrorSentry(ErrorCategory.NAVIGATION))\n      })\n    }\n  }\n\n  public ngOnDestroy(): void {\n    this.ngDestroyed$.next()\n    this.ngDestroyed$.complete()\n  }\n\n  public async dismiss(): Promise<void> {\n    this.navController.back()\n  }\n\n  public async import(): Promise<void> {\n    const addWalletInfos = this.allAccountImports.map((accountimport: AccountImport) => {\n      return {\n        walletToAdd: accountimport.wallet,\n        groupId: accountimport.groupId,\n        groupLabel: accountimport.groupLabel,\n        interactionSetting: accountimport.interactionSetting,\n        options: { override: true }\n      }\n    })\n\n    await this.accountProvider.addWallets(addWalletInfos)\n    addWalletInfos.forEach((addWalletInfo) => {\n      this.accountProvider.setInteractionSettingForWalletGroupByWallet(addWalletInfo.walletToAdd, addWalletInfo.interactionSetting)\n    })\n\n    await this.router.navigateByUrl('/tabs/portfolio')\n  }\n}\n","<ion-header class=\"ion-no-border\">\n  <ion-grid fixed=\"true\" class=\"ion-no-padding\">\n    <ion-toolbar>\n      <ion-buttons slot=\"start\">\n        <ion-back-button defaultHref=\"/\"></ion-back-button>\n      </ion-buttons>\n      <ion-title>{{ 'account-import.title' | translate }}</ion-title>\n    </ion-toolbar>\n  </ion-grid>\n</ion-header>\n\n<ion-content class=\"ion-padding\">\n  <ion-grid fixed=\"true\" class=\"ion-no-padding\">\n    <ion-row>\n      <p>{{ 'account-import.import-text' | translate }}</p>\n    </ion-row>\n\n    <ion-list>\n      <ng-container *ngFor=\"let accountImports of accountImports | keyvalue\" class=\"ion-margin-bottom\">\n        <ion-item lines=\"none\">\n          <ion-label>{{ accountImports.key }}</ion-label>\n        </ion-item>\n        <ion-list>\n          <ng-container *ngFor=\"let accountImport of accountImports.value\">\n            <ng-container *ngIf=\"accountImport.wallet.status === AirGapWalletStatus.ACTIVE\">\n              <portfolio-item [wallet]=\"accountImport.wallet\"></portfolio-item>\n              <ion-item *ngIf=\"accountImport.alreadyExists\" color=\"warning\" class=\"ion-margin-top ion-text-wrap\">\n                {{ 'account-import.warning' | translate }}\n              </ion-item>\n            </ng-container>\n          </ng-container>\n        </ion-list>\n      </ng-container>\n    </ion-list>\n  </ion-grid>\n\n  <ion-fab vertical=\"bottom\" horizontal=\"end\" slot=\"fixed\">\n    <ion-button id=\"dismiss\" shape=\"round\" color=\"secondary\" (click)=\"dismiss()\">\n      {{ 'account-import.cancel_label' | translate }}\n    </ion-button>\n    <ion-button id=\"import\" shape=\"round\" color=\"primary\" (click)=\"import()\">\n      {{ 'account-import.import_label' | translate }}\n    </ion-button>\n  </ion-fab>\n</ion-content>\n"],"sourceRoot":"webpack:///"}